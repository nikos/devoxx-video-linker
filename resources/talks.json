{
    "talks": {
        "accepted": [
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "HIZ-6683",
                "lang": "en",
                "mainSpeaker": "Xavier Mertens",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "With the rise of the mobile devices, the IoT (\"Internet of Things\") and all connected gadgets, home networks became a wild environment for all the family members. But the landscape is much broader and, today, developers must write code that will run on a multitude of different systems that do not offer the same flexibility as classic \"computers\". In this talk, I'll explain why security is important and why we (infosec people and developers) need to work together. Then I'll review some challenges that developers could face when developing on small hardware platforms and how to decrease the risks associated to them.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "$HOME Sweet $HOME",
                "track": {
                    "id": "archisec",
                    "label": "archisec.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "ZVH-5019",
                "lang": "en",
                "mainSpeaker": "Nicolas de loof",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Valentina armenise",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "\"Continuous Delivery\" is a major Buzz word, as \"Docker\" is, but in most blog I've read so far only minimalist trivial pipelines have been considered : compile, test, push docker image, that's it.\r\nJenkins definitively is more than Continuous Integration, and with recently introduced workflow plugin we can fully automate in plain DSL a complex pipeline. Integration with Docker gives it even more power.\r\nDuring this session, I'll build such a pipeline from scratch to demonstrate workflow DSL usage and flexibility, as well as Docker support to run an actual Continuous Delivery process.",
                "talkType": {
                    "id": "tia",
                    "label": "tia.label"
                },
                "title": "(Docker,  Jenkins) -> { Orchestrating Continuous Delivery }",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "QRD-7984",
                "lang": "en",
                "mainSpeaker": "Dan Tentler",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Over the last few years, I've made a hobby of both scanning the internet myself, and using Shodan to identify things on the internet that shouldn't be there. This presentation will highlight the best findings to date, with putting an emphasis on \"what on earth could they have been thinking?\". This presentation is the result of many many people not taking any security into consideration before connecting a device to the internet.\r\n",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "115 batshit stupid things you can put on the internet in as fast as I can go, somebody get me a drink",
                "track": {
                    "id": "archisec",
                    "label": "archisec.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "GOD-5435",
                "lang": "en",
                "mainSpeaker": "Stephen Chin",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Java is one of the most popular programming languages in the world, but it wasn't always that way.  Java had its early roots in embedded systems, a quirky avatar with no mouth, and a truly geeky name (\"C++ ++ --\").  Who would have imagined that Java would become the driving technological force behind the web, mobile devices, consumer electronics, and even putting an unmanned vehicle on Mars.  In this presentation hear from the folks who participated in the Java revolution and lived to tell their tale - on video!",
                "talkType": {
                    "id": "key",
                    "label": "key.label"
                },
                "title": "20 Years of Java - A Video Retrospective",
                "track": {
                    "id": "java",
                    "label": "java.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "UBD-4876",
                "lang": "en",
                "mainSpeaker": "Joe Kutner",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Play, Rails, Ratpack, and Immutant. These frameworks use alternative JVM languages -- Scala, JRuby, Groovy and Clojure -- to reimagine how we build web applications. But are they mature enough for production? Can they scale? Will they solve your problems or create new ones?\r\n\r\nIn this talk, you\u2019ll learn how JVM developers are using these frameworks in the real world. We\u2019ll compare the benefits and drawbacks of each, and look at what unique features they provide.\r\n\r\nWe\u2019ll begin with a brief introduction to each framework. You\u2019ll learn how to get started, build content, and deploy to the cloud. Then we\u2019ll compare caching, database connectivity, templating, asynchronous request processing, language paradigms, build tools, web sockets and even documentation. After this talk, you\u2019ll be able to decide which framework is best for your next project.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "4 JVM Web Frameworks in 40 Minutes",
                "track": {
                    "id": "lang",
                    "label": "lang.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "OXO-1825",
                "lang": "en",
                "mainSpeaker": "Nicolas Rigaud",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "You think robotics is still something for the future? Like flying cars and all the things we were promised in science fiction? Sorry to say this, but you're wrong!\r\nIn healthcare, in retails, in schools and even in our home: robots are on their way to wash over society! In 15mn, discover why, as developers, you'd better anticipate this!",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "5 reasons developers should pay attention to robotics",
                "track": {
                    "id": "future",
                    "label": "future.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "ZPY-2467",
                "lang": "en",
                "mainSpeaker": "Dan Allen",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Your brain can be a tyrant. It likes to hold ideas captive, leaving you to stare down the cursor against the backdrop of a blank page. We\u2019re going to set those ideas free and even get the brain to do your bidding.\r\n\r\nYou see, just like a computer, your brain can be hacked. We can play little tricks on it so it gives up those ideas and gets the cursor dancing across the screen. Come learn about 7 techniques I use to hack my brain so I can write fluently.\r\n\r\nYou\u2019ll never look at a blank page the same way again, and it won\u2019t be for long.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "7 Ways to Hack Your Brain to Write Fluently",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "HOR-7794",
                "lang": "en",
                "mainSpeaker": "Guillaume Laforge",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "In dog years... err... Open Source years, the Groovy programming language project is a very mature and successful one, as its 4.5 million downloads a year can attest. The Groovy language is certainly the most widely deployed alternative language of the JVM today. But how do we go from a hobby night & week-end project to professionally company sponsored? And back again to hobby mode but joining the wider Apache Software Foundation community?\r\n\r\nGuillaume will guide you through the history of the project, its latest developments, and its recent news, outlining the importance of a community around an Open Source project. \r\n\r\nAlso, we'll discuss what it means to contribute, when it's your hobby or as a paid committer -- what does it change? What it means to join the Apache community, what the impact of professional Open Source is, and more.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "A Groovy journey in Open Source land",
                "track": {
                    "id": "lang",
                    "label": "lang.label"
                }
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "ECQ-4058",
                "lang": "en",
                "mainSpeaker": "Oliver Geisser",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "AWS Lambda is a service from Amazon AWS for real-time data processing over large, distributed data streams. Amazon Kinesis can continuously capture and store terabytes of data per hour from hundreds of thousands of sources such as website clickstreams, financial transactions, social media feeds, IT logs, and location-tracking events.\r\n\r\nYou can think of Kinesis as a managed version of Apache Kafka but there are important differences. \r\n\r\nThis talk will give you an overview of the high level architecture, the programming model and a real world example.",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "A quick introduction to AWS Kinesis",
                "track": {
                    "id": "cloud",
                    "label": "cloud.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "AJY-5095",
                "lang": "en",
                "mainSpeaker": "Oliver Geisser",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "AWS Lambda is the new PaaS from Amazon AWS. It let's you run your code (Java and JavaScript) in response to events and automatically manages the compute resources for you. AWS Lambda runs your code in response to events such as image uploads, in-app activity, website clicks, or outputs from connected devices.\r\n\r\nThis talk will give you an overview of existing event sources, an introduction to the high level architecture and programming model and a real world example.",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "A quick introduction to AWS Lambda",
                "track": {
                    "id": "cloud",
                    "label": "cloud.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "XCA-0398",
                "lang": "en",
                "mainSpeaker": "Niels Vanden Buverie",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "You have a good product, a motivated team and clever marketeers. Yet somehow, your revenue is falling behind. More marketing then? Not neccessarily.\r\n \r\nThe issue often originates somewhere else: not enough leads are converted into customers. By means of examples and practical tips in this presentation, Jeroen shows you how to optimise your lead management in 3 simple steps.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "A scalable sales organisation thanks to smarter lead management",
                "track": {
                    "id": "startup",
                    "label": "startup.label"
                }
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "RMJ-2539",
                "lang": "en",
                "mainSpeaker": "Mark Reinhold",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Alan Bateman",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Modularizing an existing library or application, or creating new modules from scratch, can raise many difficult and subtle design issues.  This session will present a set of principles for modular development, with examples taken from the JDK itself.\r\n",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Advanced Modular Development",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "ASJ-0085",
                "lang": "en",
                "mainSpeaker": "Michael Hoffer",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "lgorithmic 3-D modeling can be very complex and time-consuming and demands specialized design tools that typically have a steep learning curve. What if you could mix visual and text-based programming to create 3-D geometries using a well known programming language?\r\n\r\nVRL-Studio is an Integrated Development Environment (IDE) based on the Java Platform that combines both visual and text-based programming. For this purpose it uses the Java Reflection API and Groovy to automatically generate interactive user interfaces (visual reflection). VRL projects are fully functional programs that are developed at runtime. A powerful plugin system enables easy integration of Java libraries, such as the 3-D modeling library JCSG.\r\n\r\nModeling the language used for describing visual workflows allows for detailed and automatic visualization, instrumentation and profiling of the executed instructions. In addition, language models can be used to add domain specific optimization algorithms to the compiler infrastructure.\r\n\r\nIn this talk we give an introduction to VRL-Studio and visualization techniques based on language models which are currently in development. In this session we will use VRL-Studio to desi",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "Algorithmic 3-D Modeling, Language Modeling and Visual Programming Using VRL-Studio (Part 1)",
                "track": {
                    "id": "future",
                    "label": "future.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "QXM-6507",
                "lang": "en",
                "mainSpeaker": "Michael Hoffer",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Algorithmic 3-D modeling can be very complex and time-consuming and demands specialized design tools that typically have a steep learning curve. What if you could mix visual and text-based programming to create 3-D geometries using a well known programming language?\r\n\r\nVRL-Studio is an Integrated Development Environment (IDE) based on the Java Platform that combines both visual and text-based programming. For this purpose it uses the Java Reflection API and Groovy to automatically generate interactive user interfaces (visual reflection). VRL projects are fully functional programs that are developed at runtime. A powerful plugin system enables easy integration of Java libraries, such as the 3-D modeling library JCSG.\r\n\r\nModeling the language used for describing visual workflows allows for detailed and automatic visualization, instrumentation and profiling of the executed instructions. In addition, language models can be used to add domain specific optimization algorithms to the compiler infrastructure.\r\n\r\nIn this talk we give an introduction to VRL-Studio and visualization techniques based on language models which are currently in development. In this session we will use VRL-Studio to des",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "Algorithmic 3-D Modeling, Language Modeling and Visual Programming Using VRL-Studio (Part 2)",
                "track": {
                    "id": "future",
                    "label": "future.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "DMA-3536",
                "lang": "en",
                "mainSpeaker": "Murat Yener",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Android is a great and terrific OS. Java based programming environment has offered an easy learning curve, great adaptation but also brought its own pitfalls and problems.\r\nThe httpclient shipped with android is buggy and outdated, Java's programming model does not encourage developers to use separate threads for non-ui related tasks, use of anonymous inner classes for listeners create a burden and ugly code and of course this list goes on.\r\n\r\nThis talk will focus on seven great opensource libraries which do fix Android's programming model, the way jquery fixes javascript. The libraries below will be covered with example code, advantages, disadvantages, internals and when to use them.\r\n\r\nDoc: Butterknife\r\nSneezy: Dagger\r\nBashful: Volley/OkHttp\r\nSleepy: GreenBus/Otto\r\nDopey: GreenDao/OrmLite\r\nHappy: Priority-JobQueue\r\nGrumpy: Retrofit",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Android and the Seven Dwarfs",
                "track": {
                    "id": "mobile",
                    "label": "mobile.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "LTZ-5985",
                "lang": "en",
                "mainSpeaker": "Ivan Morgillo",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "In a world where there is a smartphone in every pocket, designing and building applications that can run smoothly and provide the User Experience that users will like it\u2019s the only way to go. Reactive Programming style with RxJava will help you to beat Android Platform limitations to create astonishing Android Apps.\r\n\r\nThis talk will be a practical journey from basic Reactive Programming and Observer Pattern concepts to the main feature of RxJava, with practical code examples and a real-world app.\r\n\r\nI'll show the audience how to create an Observable \"from scratch\", from a list or from a function we already have in our code base. Our listeners will learn how to filter an Observable sequence to create a new sequence containing only the values we want; they will learn how to apply a function to an Observable, how to concatenate, merge or zip Observables. I'll show how to enjoy RxAndroid Schedulers to overcome the threading and concurrency hell in Android.\r\n\r\nI will close the talk with a practical example about RxJava + Retrofit, to easily communicate with a REST API.",
                "talkType": {
                    "id": "tia",
                    "label": "tia.label"
                },
                "title": "Android reactive programming with RxJava",
                "track": {
                    "id": "mobile",
                    "label": "mobile.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "QPB-5384",
                "lang": "en",
                "mainSpeaker": "Sebastian Janzen",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Roman Strangh\u00f6ner",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Imagine, you're a developer in a big company. Imagine, your boss gave you the technical leadership of the next web project and the freedom to choose whatever technology you want. \"Great! Thats my chance to finally do something with AngularJS\". But does Angular fit your needs? Does it make sense? Is it the grail you always looked forward to? Lets see some examples, hear some stories and learn why the answer is no.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "AngularJS FTW?",
                "track": {
                    "id": "web",
                    "label": "web.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "RRH-9866",
                "lang": "en",
                "mainSpeaker": "Robert Munteanu",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Apache Sling is an innovative web framework built on top of the Java Content Repository (JCR), that uses OSGi for its component model and fosters RESTful application design.\r\n\r\nThis presentation will showcase how the Apache Sling framework can be used to build a unified REST-based middleware for multiple data sources, such as MongoDB, Apache Cassandra, Apache Jackrabbit Oak or classical relational databases. In doing so it will present the benefits that come from a single Resource API over multiple data stores, both at the library level and at the HTTP boundary.",
                "talkType": {
                    "id": "tia",
                    "label": "tia.label"
                },
                "title": "Apache Sling as an OSGi-powered REST middleware",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "LKR-4576",
                "lang": "en",
                "mainSpeaker": "Andy Gumbrecht",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Apache Tomcat is a mainstay Java Application Server. Apache TomEE is a sister project at the Apache Software foundation that adds the entire EE Oracle certified Web Profile to this extremely well known platform. Now all you need to do is make the transition - Step one.\r\n\r\nWatch the transition of an established application that runs within a standard Tomcat environment into the EE world of Apache TomEE by using a visually descriptive step-by-step approach. The accompanying project and slides can be found here: https://github.com/tomitribe/tomcat_to_tomee\r\n\r\nEnable the gradual addition of virtually every single EE technology to your application through following various trails such as CDI, RESTful WebServices, EJBs, WebServlets and SOAP Services. To complete the transition viewers will also be introduced to Arquillian driven testing and the advantages this brings in regards to ensuring application stability an any EE platform.",
                "talkType": {
                    "id": "tia",
                    "label": "tia.label"
                },
                "title": "Apache Tomcat to Apache TomEE in 1-n Steps",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "WJD-3996",
                "lang": "en",
                "mainSpeaker": "Sebastien Arbogast",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Said Eloudrhiri",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "We will show you the same application, developed for the three most renowned smartwatch platforms, namely the Pebble, Android Wear and Apple Watch. We will show you the tools, languages, APIs and capabilities of each platform so that you can get a feel for the kind of opportunities offered by this new usage paradigm and the investment required to leverage those opportunities. Be advised there will be some C, Java and Swift in this presentation.",
                "talkType": {
                    "id": "uni",
                    "label": "uni.label"
                },
                "title": "Apps On Your Wrist",
                "track": {
                    "id": "mobile",
                    "label": "mobile.label"
                }
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "FBD-0753",
                "lang": "en",
                "mainSpeaker": "Vinicius Senger",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Yara Senger",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "During this talk we will show 5 different IoT real projects using different architecture basis:\r\nProject 1: We start showing Arduino + MQTT project collecting data from sensors and sending to gateway \r\nProject 2: smart helmet for bikers using Raspberry Pi, camera, GPS and cloud to make your bike riding much more smart and fun sharing pictures, paths and more. \r\nProject 3: Ta Gemalto Concept Board / EHS6 using Java ME and GSM network to grab the data and present a more M2M aproach to IoT.\r\nProject 4: To put all the complexity together we will present our automated sailboat that used a combo with Arduino + EHS6 / JavaME + Raspberry Pi / Java SE with a very smart energy system where Arduino can turn on / off EHS6 or Raspberry Pi and with that we can have different types of MCU / MPU to process the data based on the need.\r\nProject 5: To finish we will present our \"IoT Surfboard\" that is a product launched in Brazil and California which is a complete board to play with IoT that includes temperature, humidity, infrared, zigbee, wifi, bluetooth support, relay, led ana much more.\r\nIn the end of this talk you will be able to identify which software an hardware is the best choice for your project!",
                "talkType": {
                    "id": "bof",
                    "label": "bof.label"
                },
                "title": "Architectures for IoT based on real projects: from Arduino in sailboats to complex Linux smart helmet!",
                "track": {
                    "id": "future",
                    "label": "future.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "BVV-6719",
                "lang": "en",
                "mainSpeaker": "Paul Anderson",
                "otherSpeakers": [
                    "Geertjan Wielenga"
                ],
                "privateMessage": "",
                "secondarySpeaker": "Gail Anderson",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "JavaFX 8 offers a rich set of visually-appealing GUI components with a property binding mechanism for event handling. This session shows how JavaFX binding makes desktop client application development easier and faster to develop.\r\n\r\nThe session begins with an overview of JavaFX binding strategies as an alternative to event listeners. After showing how bindings work with JavaFX controls, you learn how JavaFX binding simplifies event-driven programming with effects, shapes, and animation. The session includes many useful examples, including stand-alone JavaFX programs and the integration of JavaFX into Swing-based applications.\r\n\r\nAll example programs use JavaFX 8 with Java 8 lambdas and functional programming. Prior experience with JavaFX is not required for this session.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Are You Listening?  JavaFX Binding Techniques for Rich Client UIs",
                "track": {
                    "id": "java",
                    "label": "java.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "ESU-6563",
                "lang": "en",
                "mainSpeaker": "Andy Gumbrecht",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Arquillian driven testing, and the advantages it brings in regards to ensuring application stability, is becoming more widely known. If you are not already using Arquillian then you are likely to be testing yourself rather than your application. Even if you are, then you might be interested in something new - Arquillian meets Docker!",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Arquillian Cube: Production Near Unit Tests Against Docker Images",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "LRX-8004",
                "lang": "en",
                "mainSpeaker": "Mark Reinhold",
                "otherSpeakers": [
                    "Robert Field",
                    "Stuart Marks"
                ],
                "privateMessage": "",
                "secondarySpeaker": "Alan Bateman",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Bring your favorite questions about Java SE and the Java Development Kit\u2014past, present, or future\u2014to this open Q&A session with key architects from Oracle's Java team.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Ask the JDK Architects",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "UYF-9300",
                "lang": "en",
                "mainSpeaker": "Jos\u00e9 Paumard",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Java 8 saw the introduction of a new API to handle asynchronous patterns. This API is built on two elements: the CompletionStage interface and the CompletableFuture class. This presentation aims to explain how the patterns introduced by this interface and it implementing class are new to the Java platform, and how they fill the gap in the old Future patterns. The different models are precisely presented: how to create complex asynchronous processing pipelines, how to deal with exceptions, how to test such a complex code. \r\nMany examples are shown, from the classical question of remote service access to testing asynchronous REST Service. We will show the new patterns introduced to chain asynchronous operations and how to deal with special threads, especialy in GUI environments. We will also describe new ideas in CDI: asynchronous events.\r\n",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Asynchronous programming in Java 8: how to use CompletableFuture",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "OIL-2405",
                "lang": "en",
                "mainSpeaker": "Viktor Klang",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Stream processing, to quote Mugatu, \"is so hot right now\".\r\n\r\nIn this presentation we'll explore fast data streaming using Akka Streams, an implementation of Reactive Streams, and how to design robust transformation pipelines\u2014with built-in flow control\u2014able to take advantage of multicore and going over networks.\r\n\r\nWe'll discuss possible pitfalls and how they can be avoided as well as explore how we can define immutable pieces of processing logic, as data we can reuse via composition\u2014a veritable smorgasbord of stream transformations that transparently takes advantage of multicore hardware when executed.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Back to BASICS - Back-pressured Asynchronous Scalable Immutable Composable Streams",
                "track": {
                    "id": "lang",
                    "label": "lang.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "YAP-7420",
                "lang": "en",
                "mainSpeaker": "Navin Surtani",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Building on the Java EE 7 support of its GlassFish 4.1 core Payara Micro is a super-lightweight container for you to deploy your applications from the command line without needing to install a full-blown application server. With its automatic and elastic clustering, it is designed for running Java EE applications in a modern containerized/virtualized infrastructure. As each Payara Micro server will automatically cluster with other servers on the network your Java EE application can be elastically scaled horizontally by adding and removing containers based on demand.\r\n \r\nIn this talk, Navin Surtani and Mike Croft will demonstrate the ease of deployment of applications and services to Payara Micro, along with showing how simple it is to build and scale a cluster of instances running these services.",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "Badass Microservices \u2013 Deploy, Build and Scale Your Apps with Payara Micro (Part 1)",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "KOI-2666",
                "lang": "en",
                "mainSpeaker": "Navin Surtani",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Building on the Java EE 7 support of its GlassFish 4.1 core Payara Micro is a super-lightweight container for you to deploy your applications from the command line without needing to install a full-blown application server. With its automatic and elastic clustering, it is designed for running Java EE applications in a modern containerized/virtualized infrastructure. As each Payara Micro server will automatically cluster with other servers on the network your Java EE application can be elastically scaled horizontally by adding and removing containers based on demand.\r\n \r\nIn this talk, Navin Surtani and Mike Croft will demonstrate the ease of deployment of applications and services to Payara Micro, along with showing how simple it is to build and scale a cluster of instances running these services.",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "Badass Microservices \u2013 Deploy, Build and Scale Your Apps with Payara Micro (Part 2)",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d3",
                "event": "Devoxx Belgium 2015",
                "id": "BSR-7365",
                "lang": "en",
                "mainSpeaker": "Stijn Opheide",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Thomas Goossens",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "During this BeClojure School session, we will introduce the audience to the Clojure programming language. Concepts being explained range from the lisp syntax over immutable data structures and lazy sequences to concurrency constructs. This will be an interactive session where participants can code along, ask questions and trigger discussions.\r\n\r\n[BeClojure](http://www.meetup.com/BeClojure/) is the User Group of Belgian Clojure enthusiasts. It tries to bring together companies, universities, students and hobbyists to share their experiences and expand their knowledge. It was founded in 2012 and has steadily been attracting more attendees.",
                "talkType": {
                    "id": "bof",
                    "label": "bof.label"
                },
                "title": "BeClojure School: A gentle introduction to Clojure",
                "track": {
                    "id": "lang",
                    "label": "lang.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "JOQ-4068",
                "lang": "en",
                "mainSpeaker": "Sam Bessalah",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Building distributed systems is about making trade offs. One example of trade off is sometimes having to choose between availability and strong consistency, like stated in the famous CAP Theorem.\r\nIn real life production systems, providing predictable eventual consistency in highly available distributed systems is often done via external synchronization mechanisms, and complex consensus protocols like Paxos, RAFT, 2PC or Zab (Zookeeper).\r\n\r\nHopefully, a lot of academic research to provide strong eventual consistency has emerged in the form of Commutative and Convergent Replicated Data Types, commonly known as CRDTs.\r\nCRDTs are data structures that look similar to well-known data types like counters, sets, or maps. But their internal structure makes them safe for concurrent and distributed updates, without requiring any consensus between writers, and without any loss of information in the face of concurrency.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Beyond the CAP theorem, consistency without consensus with CRDTs",
                "track": {
                    "id": "cloud",
                    "label": "cloud.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d3",
                "event": "Devoxx Belgium 2015",
                "id": "PQY-9695",
                "lang": "en",
                "mainSpeaker": "Roy van Rijn",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Most Java developers have overlooked the Java 9 REPL. This new feature will enable you to make scripts and do live coding with Java using the new 'jshell'. In this talk I'll guide you through the process of building jshell and we'll do live coding to learn how it works and behaves.\r\n\r\nAfter this quickie you'll not only be able to build but also use jshell, OpenJDK needs more users to find bugs, make tests and improve this new addition to your JDK9/bin directory.",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "Brace Yourselves, the REPL is Coming.",
                "track": {
                    "id": "java",
                    "label": "java.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "GPE-5266",
                "lang": "en",
                "mainSpeaker": "Elke Steegmans",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Mieke Kemme",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "In this talk we will give an overview of the tools available for making living documentation, bridging the gap between requirements and tests.\r\n\r\nBuilding great software requires a thorough understanding of the real needs of our customer. Techniques such as ATDD, BDD and Specification by Example help us understand the requirements by describing how the software has to behave in a language understood by all stakeholders. These specifications are made executable; creating automated acceptance tests. This suite of executable specifications forms the living documentation of the software system as it is guaranteed to be up to date. \r\n\r\nThere are several tools available that can help you with this. Well known examples are: Cucumber, JBehave, Fitnesse, \u2026 Finding out which tool is the best fit for your use case is essential to success.\r\n\r\nThis talk will give an overview of the tools available in this area. What is the general idea behind them? How do they differ? We will demonstrate how they can be used to bridge the gap between the customer and the development team.",
                "talkType": {
                    "id": "tia",
                    "label": "tia.label"
                },
                "title": "Bridging the communication gap: can tools help?",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d3",
                "event": "Devoxx Belgium 2015",
                "id": "YYW-4230",
                "lang": "en",
                "mainSpeaker": "Carol McDonald",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Tugdual Grall",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "More and more applications have to store and process time series data, a very good example of this are all the Internet of Things -IoT- applications. \r\n\r\nThis hands on tutorial will help you get a jump-start on scaling distributed computing by taking an example time series application and coding through different aspects of working with such a dataset. We will cover building an end to end distributed processing pipeline using various distributed stream input sources, Apache Spark, and Apache HBase, to rapidly ingest, process and store large volumes of high speed data. \r\n\r\nParticipants will use Scala and Java to work on exercises intended to teach them the features of Spark Streaming for processing live data streams ingested from sources like Apache Kafka, sockets or files, and storing the processed data in HBase.",
                "talkType": {
                    "id": "lab",
                    "label": "lab.label"
                },
                "title": "Build a Time Series Application with Spark Streaming and HBase",
                "track": {
                    "id": "cloud",
                    "label": "cloud.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "IQQ-7475",
                "lang": "en",
                "mainSpeaker": "Simon Maple",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Oleg \u0160elajev",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "As developers, the easiest part of our jobs is actually creating a beautiful solution to a complex problem\u2026 in code. Why is this the easiest part? We\u2019ll because we enjoy doing it and because we\u2019re good at it. The hard bit comes after you\u2019re code complete. How do you increase the awareness of your application? How can you encourage adoption, community, media interest, gain testimonials, deal with support, achieve rockstar SEO and much much more.\r\n\r\nDuring this session we look at how you can make the most of your awesome applications from a developer advocacy point of view. Simon and Oleg, ZeroTurnaround\u2019s Developer Advocates, give their best practices and experiences having dealt with advocating free projects, commercial products, media and user group communities.",
                "talkType": {
                    "id": "bof",
                    "label": "bof.label"
                },
                "title": "Build it and they will come. But, will they really?",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "XFA-9245",
                "lang": "en",
                "mainSpeaker": "Sam Bessalah",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Finagle, is Twitter's open source, high performance RPC Scala library, built on top of Netty, that makes it easy to build multi protocol, asynchronous, scalable distributed applications.\r\n \r\nMany project have emerged on top of this library like, Finch and Finatra. They are lightweight, powerful web server and REST libraries built on top of Finagle.\r\nWith micro-services being all the buzz, we will see how Finagle and its ecosystem can be of use, to build and scale applications composed of heterogeneous services",
                "talkType": {
                    "id": "tia",
                    "label": "tia.label"
                },
                "title": "Building high performance servers with Twitter Finagle.",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "RWZ-7311",
                "lang": "en",
                "mainSpeaker": "C\u00e9dric Champeau",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Apache Groovy has been a language of great interest to build internal domain specific languages (DSLs) for years now. But what will an \"idiomatic Groovy DSL\" in 2016? In particular, what makes Apache Groovy a language of choice to implement a DSL on the JVM?\r\n\r\nIf you were to write a DSL today, what would you use? Runtime metaprogramming? Builders? Static compilation? Type checking extensions? The advent of new Groovy based technologies like Gradle, Spock, Grails or Ratpack have initiated a whole new way of providing DSLs, making them very different from what you could do 10 years ago. In this talk, we will illustrate what we think is a modern DSL written in Groovy, syntactically speaking, but also implementation wise. \r\n\r\nHow you can improve the syntax of your DSL, its performance, or user experience (IDE support, error reporting, ...).",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Building modern DSLs in Groovy",
                "track": {
                    "id": "lang",
                    "label": "lang.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "OVY-1576",
                "lang": "en",
                "mainSpeaker": "Michael Heinrichs",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Hendrik Ebbers",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "This session will give you a thorough introduction into Web Components. We start by explaining the standards that form the foundation of WebComponents: Template tag, custom elements, Shadow DOM, and HTML imports. Next we will do a live coding session showing you how you can rapidly build a web application with existing Web Components from Polymer Elements and other sources and connect the application to a server. In the last section, we are going to explain how you can build your own custom components and integrate them into your application. Also we will share our experience gained while building an application with Web Components and talk about pitfalls that should be avoided when using Web Components in a real world project.",
                "talkType": {
                    "id": "uni",
                    "label": "uni.label"
                },
                "title": "Building modern web UIs with Web Components",
                "track": {
                    "id": "web",
                    "label": "web.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "NLT-9547",
                "lang": "en",
                "mainSpeaker": "Antoine Sabot-Durand",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Jos\u00e9 Paumard",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "The work on JSR 365 (Context and Dependency Injection for Java) started one year ago. \r\nExpert group already added interesting features like asynchronous events or Java SE bootstrap. Thanks to early draft and alpha version of CDI 2.0 implementation we can already experiment the future CDI 2.0.\r\n\r\nIn this talk we will show the top new features in CDI 2.0 thru code examples  (when possible) and presents expert group serious leads for the end of this first totally open source Java EE specification.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "CDI 2.0 is coming",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "KVW-1306",
                "lang": "en",
                "mainSpeaker": "Alex Snaps",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Louis Jacomet",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "After numerous presentation on the JSR107, this in-depth 3 hour university session will twist the problem upside down. Instead of leading you through every aspect of the new Caching API for Java, we'll start from a real Java application, looking at its architecture, measure contention points and slowly start adding different caching patterns to it.\r\nWe'll look beyond the specification as well, not in terms of proprietary APIs, but in terms of different cache topologies (onheap, offheap, distributed, ...) and considerations around them when introducing caching to both an existing or architecting a new one.\r\nFinally, we shall look at how different application containers and framework may affect decisions we've made during the session. ",
                "talkType": {
                    "id": "uni",
                    "label": "uni.label"
                },
                "title": "Caching 101: Caching on the JVM (and beyond)",
                "track": {
                    "id": "archisec",
                    "label": "archisec.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "UPK-7880",
                "lang": "en",
                "mainSpeaker": "Lorin Hochstein",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Software is developed and operated by fallible human beings while running atop unreliable distributed infrastructure. Yet, we need the software to work reliably. To make things worse, as the complexity and number of these services increase, our confidence in the reliability of the overall system shrinks.\r\n\r\nAt Netflix, our software infrastructure is implemented as a large number of networked services. To increase our confidence that the overall system will remain available in the face of real-world events, we run experiments on the production system, including injecting failures. We call this approach \"Chaos Engineering\".  This talk will discuss the principles underlying Chaos Engineering and how we apply these inside of Netflix.\r\n",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Chaos Engineering",
                "track": {
                    "id": "archisec",
                    "label": "archisec.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "JIH-0649",
                "lang": "en",
                "mainSpeaker": "Baruch Sadogursky",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "We used to release one product, once a year, built by one team. Today we have teams of hundreds of developers creating a multitude of software packages that are released multiple times a day.How did that happen?! In this talk, we\u2019ll give you the answer: As the good old advice of Computer Science goes, \u201cIf it hurts, do it more often!\u201d. Suddenly, we realized that what we do during the \u201cRelease Month Code Freeze\u201d is actually a lot of repeatable, automatable steps. So, we called in the machines.Now we have Continuous Integration servers controlling an exponential amount of robot developers (agents) that are building and testing our code, all day long. Continuous Deployment tools, dictating their order to robot sysadmin, deploying our software on a rapidly increasing amount of varied platforms, as frequent as we please.The Machines got their revenge, and \u201cwe, for ones, welcome our new robotic overlords\u201d!",
                "talkType": {
                    "id": "ignite",
                    "label": "ignite.label"
                },
                "title": "Continuously building, releasing and deploying software: The Revenge of the Machines!",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d3",
                "event": "Devoxx Belgium 2015",
                "id": "PTD-7145",
                "lang": "en",
                "mainSpeaker": "Venkat Subramaniam",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Writing code is easy. Writing good quality code is an entirely different story. How can we measure quality of design? How do we know we're doing the right set of things that will leads us to a better design? In this session we will learn about some core software design principles that help programmers everyday. Instead of talking about theory and what we could potentially do, we will take on multiple examples, discuss the solution, pros and cons, and bring out key design principles that have an impact on the outcome.",
                "talkType": {
                    "id": "uni",
                    "label": "uni.label"
                },
                "title": "Core Design Principles for Software Developers",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "GMY-1891",
                "lang": "en",
                "mainSpeaker": "Jennifer Strater",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Integration is a key piece of modern software development. Whether integrating with external vendors or providing APIs for front-end technologies like AngularJS or ReactJS, REST is a popular choice. This session will walk through how and why using the Grails framework to create a RESTful API is easy and efficient. Attendees should have a basic understanding of REST and experience with a web application framework like Grails.",
                "talkType": {
                    "id": "tia",
                    "label": "tia.label"
                },
                "title": "Creating RESTful Web Services with Grails 3",
                "track": {
                    "id": "lang",
                    "label": "lang.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "OOF-1013",
                "lang": "en",
                "mainSpeaker": "Bert Jan Schrijver",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Software-defined radio (SDR) is a radio communication system where parts of the components are implemented in software. Cheap USB digital TV-receivers usually work this way, and specific chipsets can even be tuned to a frequency of your choice. And that's where the fun starts: with the right software, not only digital TV but all sorts of radio communication can be received...\r\nThis session will explain the basic concepts of SDR and show how to use a 7 dollar USB stick to receive and decode maritime AIS messages from ships and ADS-B messages from transponders of commercial airliners. I will demonstrate how to process and visualize the data, resulting in a web application that shows the actual state of ships and airplanes around the location of the receiver.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Decoding the air around you with Java and $7 hardware",
                "track": {
                    "id": "future",
                    "label": "future.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "NQL-1740",
                "lang": "en",
                "mainSpeaker": "Sam Bessalah",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Machine learning has become a buzz word that goes beyond the tech industry. In the past three years, major players like Google, Facebook or Microsoft have been battling to snatch up specialized startups that have mastered a field of machine learning called Deep Learning.\r\nYou can see it in action in products like Google Now, Google Photos, Microsoft Cortana or Skype Real Time Speech Translation.\r\nDeep Learning is the latest revolution in Artificial Intelligence, evolving the state of the art in feature engineering for machine learning models, and in deep neural networks.\r\n\r\nIn this talk we will demystify this emerging field, see how it works, its limits and how we can get started into  building smart applications with it.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Deep Learning for common mortals.",
                "track": {
                    "id": "future",
                    "label": "future.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l3",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "KSD-8798",
                "lang": "en",
                "mainSpeaker": "Remi Forax",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "The introduction of functional interfaces in Java 8 allows to easily use the concepts of functional programming in Java. But Java is still an OOP language, and i think it's interesting to take a look at a little farther and anwser to the question how FP and OOP can be mixed together in Java 8.\r\nThis talk will use the design patterns of the GoF as a common story, and show a lot of codes explaining how most of the behavioral and creational patterns can be re-written using a mix between FP and OOP in Java.",
                "talkType": {
                    "id": "uni",
                    "label": "uni.label"
                },
                "title": "Design Pattern Reloaded",
                "track": {
                    "id": "java",
                    "label": "java.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d3",
                "event": "Devoxx Belgium 2015",
                "id": "QNL-3595",
                "lang": "en",
                "mainSpeaker": "Venkat Subramaniam",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "We all have used design pattern in Java for decades. Most of those patterns were influenced by the capability of the language. The capability of the language, however, got better with Java 8. With lambdas, we will use some design patterns differently than before. There are other design patterns that we can use now that were beyond reasonable reach before. If you're into design patterns, what to up your skills on applying patterns with lambdas and related capabilities in Java 8, see you at the session.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Design Patterns in the Light of Lambda Expressions",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "VKR-3527",
                "lang": "en",
                "mainSpeaker": "Alex Soto",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Do you know that Java EE is not heavy anymore? Do you know that in Java EE with two simple annotations you can create a REST endpoint that it is secured, transaction-aware and with concurrent control? And even more important, the era of heavy application servers is over. Apache TomEE has fixed this.\r\n\r\nCome to this session to learn how you can develop a micro service and deploy it with only 5 minutes.\r\n",
                "talkType": {
                    "id": "ignite",
                    "label": "ignite.label"
                },
                "title": "Develop and Deploy your JavaEE micro service in less than 5 minutes with Apache TomEE.",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "JIP-2698",
                "lang": "en",
                "mainSpeaker": "Baruch Sadogursky",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Using software modules today is the default way of working for most systems and frameworks. With the advent of many software languages and OSS frameworks, new module systems are constantly created and new module ecosystems start to prevail. This trend is horizontal and covers operating system packages, language libraries and application modules (plugins). But while some module systems are nicer to use, others are repeating past mistakes and are a daily source for developer agony and pain...",
                "talkType": {
                    "id": "ignite",
                    "label": "ignite.label"
                },
                "title": "Developing Modular Software - Welcome to Hell!",
                "track": {
                    "id": "archisec",
                    "label": "archisec.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "PLT-6113",
                "lang": "en",
                "mainSpeaker": "Ray Tsang",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "A quick overview on Docker containers, usages, and how to scale up from a single container to a fleet of containers working together with Kubernetes for real-life workloads, such as running java-based applications! Join this session to see how to use Kubernetes to launch, manage, and rolling-upgrade a fleet of Java application instances with session replication.\r\n\r\nKubernetes builds on top of Docker to construct a clustered container scheduling service. Kubernetes enables users to ask a cluster to run a set of containers. The system will automatically pick worker nodes to run those containers on, which we think of more as \"scheduling\" than \"orchestration\". Kubernetes also provides ways for containers to find and communicate with each other and ways to manage both tightly coupled and loosely coupled sets of cooperating containers.\r\n\r\nIn this session, you'll learn:\r\n - How to containerize different Java-based microservice workloads using Docker and different build tool plugins\r\n - Deploying and managing a fleet of Java-based microservices in Kubernetes\r\n - Service discovery 101 in Kubernetes\r\n - Perform critical DevOps steps, such as canary, rolling update, roll backs...\r\n - Tips and tricks!",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Developing and deploying Java-based microservices in Kubernetes",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "HEK-8326",
                "lang": "en",
                "mainSpeaker": "Alex Van Boxel",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "At the Devoxx Steering comity we like to get our hands dirty each year. This year we wanted to go back to basics. Back are the conference badges, but we listened to our attendees and sponsors, so we want to give you a personalised badge, printed directly from our mobile scanner.\r\n\r\nBecause our printers we choose don't have a printer driver we decided to create our own. This quickie will go over the steps we took, from reverse engineering with WireShark till writing our own printer driver. You will learn some reverse engineering skills and gain some insights into the Android Printer framework. ",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "Devoxx Registration: Creating our own Android Printer Driver",
                "track": {
                    "id": "mobile",
                    "label": "mobile.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "YLF-8253",
                "lang": "en",
                "mainSpeaker": "Daniel De Luca",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "State of the Union. Gather together Devoxx4Kids team members and other interested people.",
                "talkType": {
                    "id": "bof",
                    "label": "bof.label"
                },
                "title": "Devoxx4Kids BOF",
                "track": {
                    "id": "future",
                    "label": "future.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "PCV-1121",
                "lang": "en",
                "mainSpeaker": "Amanda Waite",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Load testing is an important part of the software development lifecycle - it\u2019s critical that you understand how your applications and infrastructure will hold up once they go into production. But basic load testing isn\u2019t quite enough, you need to be able to model user behavior at scale to really get a feel for how your systems will perform under load. \r\n\r\nContainers and Kubernetes can help minimize the devops work associated with load testing.  Containers rapidly scale, making them a great choice for simulating clients. And while working with individual containers is straightforward, managing a fleet of containers and orchestrating them can be difficult. Kubernetes, an open source container container orchestration system, makes it easy to deploy and manage many containers.\r\n\r\nIn this session we'll walk through setting up and scaling distributed load testing of a sample Java based application using both Apache JMeter and Gatling and then derive a simple pattern that can be used for testing a variety of different scenarios and applications.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Distributed Load Testing with Kubernetes",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "IAA-3193",
                "lang": "en",
                "mainSpeaker": "Xavier Tordoir",
                "otherSpeakers": [
                    "Andy Petrella"
                ],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "While machine learning has been used for decades, accessibility to these methods is undergoing a radical shift, with the rise of simple interfaces and implementations on distributed systems. \r\nIn practice it means that more players can afford to take advantage of Machine Learning and at larger scales.\r\n\r\nIn this talk we're going to review some introductory Machine Learning concepts, principles and illustrate them with use cases that could scale to large amount of data using Apache Spark as the processing engine.\r\n\r\nThe illustrative examples will be run directly from notebooks to provide a real life experience, from simple analysis towards how advanced machine learning can be simply applied at very large scale.",
                "talkType": {
                    "id": "uni",
                    "label": "uni.label"
                },
                "title": "Distributed Machine Learning 101 using Apache Spark from a Browser",
                "track": {
                    "id": "cloud",
                    "label": "cloud.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "KIH-7080",
                "lang": "en",
                "mainSpeaker": "Gerard Maas",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Apache Spark is a distributed computing framework that enables scalable, high-throughput, and fault-tolerant processing of data. Spark Streaming delivers the power of Spark to process streams of data in near real-time.\r\n\r\nAfter a quick recon of the surface, in this talk we are going to dive into Spark Streaming functional and operational aspects. Through several examples, we will explore the Spark Streaming API, will discuss some of the challenges of processing streaming data in real-time and will provide a clear understanding of the internal processes that are key for the successful production deployment of a Spark Streaming application.\r\n",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Dive into Spark Streaming",
                "track": {
                    "id": "cloud",
                    "label": "cloud.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "ANF-6766",
                "lang": "en",
                "mainSpeaker": "Baruch Sadogursky",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Docker is hot. However, as Docker container use spreads into more mature production pipelines, there can be issues about control of Docker images to ensure they are production-ready.  Is a promotion-based model appropriate to control and track the flow of Docker images from development to production?\r\nWe will demonstrate how to implement a promotion model for docker images, and then show how to distribute them to any kind of consumer, being it a customer or a data center.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Docker Container Lifecycles \u2013 Problem or Opportunity?",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d3",
                "event": "Devoxx Belgium 2015",
                "id": "OEI-9379",
                "lang": "en",
                "mainSpeaker": "Xavier Coulon",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Docker is awesome, but how to use it well when doing Java development ? \r\n\r\nIn this talk you will get a quick introduction on how to use Docker effectively, especially for Java EE development.\r\nWe will show how the recent release of Eclipse Mars supports Docker to make it even more integrated into your day-to-day work from within your IDE.\r\nIn particular, you'll see how you can pull and run an image for a database, build a custom image for an application server, run it and deploy a JavaEE application using data volume, exposed ports and container links. \r\nAnd more !",
                "talkType": {
                    "id": "tia",
                    "label": "tia.label"
                },
                "title": "Docker Tooling for JavaEE  Developers ",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "ECW-1790",
                "lang": "en",
                "mainSpeaker": "Arun Gupta",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Containers are enabling developers to package their applications in new ways that are portable and work consistently everywhere. Docker has become the de facto standard for those portable containers in the cloud. Kubernetes provides an open source orchestration of Docker containers. This tutorial will provide an introduction to Docker and Kubernetes. The talk will explain several recipes on how to create and publish Docker images that package Java EE applications. Design patterns and anti-patterns that show how to create cluster of such applications will be shown. Replicating your environments using Docker images will be shown. Attendees will learn how Kubernetes\u2019s self-healing mechanism can be used to create cluster of these containers.",
                "talkType": {
                    "id": "uni",
                    "label": "uni.label"
                },
                "title": "Docker and Kubernetes Recipes for Java Developers",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "UNA-4950",
                "lang": "en",
                "mainSpeaker": "Arun Gupta",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Containers are enabling developers to package their applications in new ways that are portable and work consistently everywhere. Docker has become the de facto standard for those portable containers in the cloud. Kubernetes provides an open source orchestration of Docker containers. This tutorial will provide an introduction to Docker and Kubernetes. The talk will explain several recipes on how to create and publish Docker images that package Java EE applications. Design patterns and anti-patterns that show how to create cluster of such applications will be shown. Replicating your environments using Docker images will be shown. Attendees will learn how Kubernetes\u2019s self-healing mechanism can be used to create cluster of these containers.",
                "talkType": {
                    "id": "lab",
                    "label": "lab.label"
                },
                "title": "Docker and Kubernetes for Java Developers",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "IYC-1850",
                "lang": "en",
                "mainSpeaker": "Patrick Chanezon",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "In 2 years, Docker hit the sweet spot for devs and ops, with tools to build, ship and run distributed apps architected as a set of collaborating microservices packaged as Linux containers.\r\n\r\nThe last few months have seen very fast innovation by Docker and its in the ecosystem, up, down, around and in the stack: \r\n\r\n* In: Docker now has a native container network model, making it easier to build distributed applications.\r\n* Around: Docker plugin system defines extension points for volumes and networking. I will describe the various plugins that have been developed and their capabilities.\r\n* Down: the Open Container Project defines a standard for container image format, and the runC project is a reference implementation of this standard, giving you fine grained control on how you can run your containers and more advanced features like user namespaces and checkpoint/restore. Docker is going to be built on top of runC.\r\n* Up: Docker orchestration is a fast moving landscape with players like Docker Swarm, Kubernetes, or Mesos.\r\n\r\nThe talk will be peppered with demos of how these tools can help developers build, ship and run microservice based applications.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Docker platform and ecosystem: build, ship and run distributed applications",
                "track": {
                    "id": "cloud",
                    "label": "cloud.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "TID-3337",
                "lang": "en",
                "mainSpeaker": "Nicola Paolucci",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Software teams at Atlassian are discovering Docker as their ultimate hammer to nail (allthethings). From setting up portable development environments, to deploying services on an internal PaaS which supports Docker as a first class citizen. It is also finding it's way into Atlassian's products, with support for Docker-based builds in Bamboo and delivering Software to the customer inside containers, starting with Stash.\r\n\r\nOne of the teams that have an even more spectacular use-case is Atlassian's Files Team. Hear about the team's architecture, and how they're using Docker spin up millions of short-lived containers in their processing infrastructure to convert assets of over 40.000 companies in a reliable, secure and scalable fashion.",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "Dockerism at Atlassian: A million deaths",
                "track": {
                    "id": "cloud",
                    "label": "cloud.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "FHY-1411",
                "lang": "en",
                "mainSpeaker": "Maarten Dirkse",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "This talk introduces Mayfly, a development platform built by bol.com. Mayfly speeds up your service development by wrapping your scrum user story code in containers, testing it in an isolated, production-like environment and automatically enforcing your Definition of Done.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Dockerize user stories with Mayfly",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "ZAI-3623",
                "lang": "en",
                "mainSpeaker": "Charles Nutter",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Have you ever used an open source project? Of course you have, but\r\nhave you made any contributions yourself? Filed a bug report?\r\nSubmitted a patch? Have you ever started your own OSS project, or\r\ntaken a closed/private project public? What licenses should you use?\r\nHow do you manage contributions? How do you support contributors and\r\nstill get work done? What do you do with difficult community members?\r\nIn this talk we'll go over the basics of OSS: how to get involved, how\r\nto start a project, how to manage contributions. We'll discuss project\r\nlifecycles, legal CYA tips, and how to keep projects moving. You'll\r\nsee the inner workings of real OSS projects, and learn how to be a\r\nbetter OSS user and producer.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Doing Open Source (The Right Way)",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                }
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "BYP-7345",
                "lang": "en",
                "mainSpeaker": "Koen Roevens",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Dropwizard is one of the popular choices to create microservices in java. Its basic claim is that it allows you to ship a production-quality RESTful web service in the shortest time possible. A Dropwizard application is delivered as a standalone jar which makes a lot of sense in the context of microservices.\r\nHowever a lot of companies/enterprises do not yet embrace DevOps. Often the java application server used in production is imposed on the developers. \r\n'Wizard in a box' allows you to deploy your regular Dropwizard application as a war on a Java application server, so that you as a developer can still enjoy the goodies of Dropwizard in this context.\r\n'Wizard in a box' is available on Github and is released in the central maven repository.\r\nThe quickie will highlight the benefits of Dropwizard and will after that zoom into 'Wizard in a box'",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "Dropwizard entering JEE land in a box",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                }
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "YCS-2461",
                "lang": "en",
                "mainSpeaker": "Johannes Fiala",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "This session will show you how to use Swagger/Swagger-Codegen to generate documentation & client stubs for the Facebook Graph API (which is not using Swagger).\r\n\r\nThe steps demonstrated will be:\r\n\r\n* basic overview of the Facebook Graph API\r\n* extract fields from the Facebook Graph API (using the metadata-flag) using Swagger-Codegen\r\n* provide a server-side wrapper for the Facebook REST API \r\n* access this wrapper using Swagger-UI and generate client code stubs using Swagger-Codegen\r\n\r\nFinally, you are able to access the Facebook Graph API directly with code completion for all the fields and their description.\r\n\r\nYou will be able to walk away with the demo code ready for your own use or use this technique for other REST APIs you would like to generate client stubs from.\r\n\r\nTechnology stack:\r\n\r\n* Spring/Spring Boot\r\n* Springfox (https://github.com/springfox)\r\n* Swagger-UI (https://github.com/swagger-api/swagger-ui)\r\n* Swagger-Codegen (https://github.com/swagger-api/swagger-codegen)",
                "talkType": {
                    "id": "bof",
                    "label": "bof.label"
                },
                "title": "Enhance existing REST APIs  (e.g. Facebook Graph API) with code completion using Swagger/Spring",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "DCW-7103",
                "lang": "en",
                "mainSpeaker": "Dan Allen",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "How do you grow an open source software project? How do you get to 100 contributors, 1,000 community members, 10,000 users or 100,000 downloads? How do you make it wildly successful?\r\n\r\nI\u2019ve helped cultivate wildly successful open source communities on sparse budgets. Today, I want to share with you the rules I follow to build open source projects and communities.\r\n\r\nOpen Source works because it\u2019s the right way. Open Source works because it\u2019s the best way. There are no secrets that, once revealed, bring it all crashing down. Even with the cards face up on the table, we still feel good when someone thanks us for our contribution. When they don\u2019t, we might decide to vote with our feet and leave.\r\n\r\nAttend this talk to learn everything you need to know about Open Source to make your community building efforts wildly successful.",
                "talkType": {
                    "id": "start",
                    "label": "start.label"
                },
                "title": "Everything You Need to Know to Grow Open Source",
                "track": {
                    "id": "startup",
                    "label": "startup.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "OXN-8472",
                "lang": "en",
                "mainSpeaker": "Geoffrey De Smet",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "A vehicle routing problem is interesting puzzle: deliver items to locations across the country with trucks in the shorted time possible.\r\n\r\nIt's elegantly simple to describe, it looks deceivingly easy to optimize, but it's incredibly difficult to solve.",
                "talkType": {
                    "id": "ignite",
                    "label": "ignite.label"
                },
                "title": "False assumptions for the Vehicle Routing Problem",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "CCF-5732",
                "lang": "en",
                "mainSpeaker": "Joost den Boer",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "In need of building a new api fast? Come and have a look at Unfiltered, a Scala Http request toolkit with which you can create and run a rest api in just 4 lines! \r\nDuring this Quickie I'll demonstrate some of the usages of Unfiltered, from some simple endpoints to a fully Akka clustered application.",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "Fast Rest API building with Unfiltered",
                "track": {
                    "id": "lang",
                    "label": "lang.label"
                }
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "KRN-1686",
                "lang": "en",
                "mainSpeaker": "Renato Cavalcanti",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "In this talk we'll explore some techniques you can use when implementing a DDD/CQRS application using Akka and Scala. \r\n\r\nFirst we'll show how we can use the Scala Type System to build a domain model based on case classes and functional paradigms. Contrary to what the common sense dictates, we'll demonstrate that functional programming is a very good fit for domain modeling.\r\n\r\nSecondly we'll explore the available options when integrating it with Akka and Akka Persistence. \r\n\r\nWe'll cover the following points:\r\n\r\n- The advantages and pitfalls of using Akka as a messaging subsystem \r\n- How to reliably propagate events from the command side to the query side of your CQRS application\r\n- How to recover from failure\r\n- How to fit it in an asynchronous programming model\r\n\r\nWe'll wrap-up the talk with a short demo application built on Play and Akka.",
                "talkType": {
                    "id": "uni",
                    "label": "uni.label"
                },
                "title": "Field guide to DDD/CQRS using the Scala Type System and Akka",
                "track": {
                    "id": "lang",
                    "label": "lang.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d3",
                "event": "Devoxx Belgium 2015",
                "id": "HWN-2231",
                "lang": "en",
                "mainSpeaker": "Mathilde Lemee",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Want to see the power of Firebase ? What a better way than 30 minutes of live coding ? We will construct a multi player game game in javascript with a chat module with no single line on a server.",
                "talkType": {
                    "id": "tia",
                    "label": "tia.label"
                },
                "title": "First steps with Firebase",
                "track": {
                    "id": "web",
                    "label": "web.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "DEC-1936",
                "lang": "en",
                "mainSpeaker": "Mike Croft",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "A lot of people know the basics of performance testing, but most will have a vague knowledge at best centered around one or two favourite tools which are always available. What happens when these tools are taken away? How do you apply your knowledge to other tools in a useful way?\r\n",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "Fixing performance problems with someone else's toolbox",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "OTT-9627",
                "lang": "en",
                "mainSpeaker": "Dierk K\u00f6nig",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Between the many options for functional programming on the JVM, Frege is the only one that is pure. It follows the syntax and behavior of Haskell with super-strong type safety, Hindley-Milner type inference, higher-rank types, typeclasses, lazy evaluation per default, and announcing all effects in the type system.\r\nFrege is also unique in the way that it interoperates with Java: it does not compromise its language guarantees in terms of purity and type safety when calling into Java!\r\nCome and see how you can achieve pure functional programming on the JVM.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Frege, a Haskell for the JVM",
                "track": {
                    "id": "lang",
                    "label": "lang.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d4",
                "event": "Devoxx Belgium 2015",
                "id": "DHJ-2040",
                "lang": "en",
                "mainSpeaker": "Jeroen Horemans",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Nick Vanderhoven",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "In this timeslot we will take you on a journey trough the evolutionary steps each professional developer has gone trough.\r\n\r\nWhat does it mean to be a pro, how can you keep improving your knowledge, coding style and behaviour. \r\nHow can you make sure you don't get stuck and become an abomination (aka mediocre)\r\n\r\nWe will set you on a quest for self reflection,  see where you stand today, what are the quick wins for your career and what could be the attention points for the years to come.\r\n\r\nDon't be mistaking! We can only show you the door, you have to walk through it.\r\n",
                "talkType": {
                    "id": "ignite",
                    "label": "ignite.label"
                },
                "title": "From Junior to professional in 20 * 15000ms",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "FDJ-5553",
                "lang": "en",
                "mainSpeaker": "Hubert Sablonni\u00e8re",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Service Workers are coming in Web browsers near you and a little revolution comes with it : offline, push notifications, background sync...\r\n\r\nIn this session, we'll start with offline-first and existing technologies like AppCache. Then we'll see how these Service Workers work in details and talk about other modern APIs that comes with it : promises, cache, fetch, Manifest API...",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "From Jurassic Web to offline-first and more with Service Workers",
                "track": {
                    "id": "web",
                    "label": "web.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "BGA-9060",
                "lang": "en",
                "mainSpeaker": "Karen Boers",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "The Belgian startup community has emerged fast. Based on metrics from 1400+ startups across the country, we will cover the strengths and weaknesses of our region and the availability of supporting programs and instruments. With the Startup Manifesto, this startup community has cried out in a most constructive way, shaking up policy makers and influencers across the country. Based on the short-term impact through this \"single voice\", Belgium is now a pioneering region in Europe when it comes to startup communities and bottom-up policy making.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "From Startup Manifesto to Startup Nation",
                "track": {
                    "id": "startup",
                    "label": "startup.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "PHZ-9548",
                "lang": "en",
                "mainSpeaker": "Elke Steegmans",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Mieke Kemme",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Building great software requires a thorough understanding of the real needs of our customer. Techniques such as ATDD, BDD and Specification by Example help us understand the requirements by describing how the software has to behave in a language understood by all stakeholders. These specifications are made executable; creating automated acceptance tests. This suite of executable specifications forms the living documentation of the software system as it is guaranteed to be up to date. \r\n\r\nThere are several tools available that can help you with this. Well known examples are: Cucumber, JBehave, Spock, REST-Assured... Finding out how to apply those tools is essential to success. In this Hands-on lab you'll learn how to complete your test automation stack from unit level to executable specifications.\r\n\r\nAfter a brief introduction of the available tools, you will make specifications executable with a selection of these tools. This will give you the opportunity to compare them, check out their strengths and weaknesses, see what they have in common and most of all: see how they can help you to create better software, and can form the missing piece in the automation puzzle.",
                "talkType": {
                    "id": "lab",
                    "label": "lab.label"
                },
                "title": "From TDD to BDD and back; your guide on building a complete test automation stack",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "UMW-0760",
                "lang": "en",
                "mainSpeaker": "Mario Fusco",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "The main consequence of the introduction of lambda expressions in Java 8 is the possibility of conveniently mixing the object oriented and the functional paradigms. Nevertheless the biggest part of Java developers is not used yet to employ functional idioms and then they are not ready to fully leverage the new functional capabilities of Java. In particular it is still uncommon to see functions used together with data in business domain model. The purpose of this talk is not doing a comparison between object oriented and functional programming, but showing how these two styles can be combined in order to take advantage of the good parts of both. For example it's usual to pass a list of data to a function that processes them, but there are cases when you may want to create a list of functions and pass a single data through all of them. Immutable objects leads to a inherently thread-safe domain model. Functions often compose better than objects. Side-effect free code allows better reusability. This talk will demonstrate the validity of these statements with practical examples till to distil  the essence of functional programming: data and behaviours are two aspects of the same thing.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "From object oriented to functional domain modelling",
                "track": {
                    "id": "java",
                    "label": "java.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "KGX-5093",
                "lang": "en",
                "mainSpeaker": "Matt Raible",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Building a modern web (or mobile) application requires a lot of tools, frameworks and techniques. This session shows how JHipster unites popular frameworks like AngularJS, Spring Boot and Bootstrap. Using Yeoman, a scaffolding tool for modern webapps, JHipster will generate a project for you and allow you to use Java 7 or 8, SQL or NoSQL databases, Spring profiles, Maven or Gradle, Grunt or Gulp.js, WebSockets and BrowserSync. It also supports a number of different authentication mechanisms: classic session-based auth, OAuth 2.0, or token-based authentication. For cloud deployments, JHipster includes out-of-the-box support for Cloud Foundry, Heroku and Openshift.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Get Hip with JHipster: Spring Boot + AngularJS + Bootstrap",
                "track": {
                    "id": "web",
                    "label": "web.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "IVB-3638",
                "lang": "en",
                "mainSpeaker": "Peter Van de Voorde",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Learn why getting out of your comfort zone can help you become happier and better at what you love doing.",
                "talkType": {
                    "id": "ignite",
                    "label": "ignite.label"
                },
                "title": "Get Out of Your Comfort Zone!",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "YTL-7946",
                "lang": "en",
                "mainSpeaker": "Wolfram Rittmeyer",
                "otherSpeakers": [],
                "privateMessage": "Thu",
                "secondarySpeaker": "Pascal Welsch",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "The RxJava hype is still in full swing and almost everything gets Rxified. At least since the stable RxAndroid 1.0 release it\u2019s time to take RxAndroid seriously!\r\n\r\nIn this session you will learn what RxJava is about, how to use it on Android and how RxAndroid can be used to build maintainable Android Apps from networking with Retrofit2 to UI with the new RxBinding and RxLifecycle libraries powered by MVP.\r\n\r\nIf you haven\u2019t had the time to Get Reactive, we\u2019ll provide a quick introduction why you should use RxAndroid in your current and next projects.\r\n",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Get Reactive",
                "track": {
                    "id": "mobile",
                    "label": "mobile.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d3",
                "event": "Devoxx Belgium 2015",
                "id": "IHR-9537",
                "lang": "en",
                "mainSpeaker": "Venkat Subramaniam",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "The first thing visible in Java 8 is the lambdas, but the real power is in Streams.\r\nIf you're interested in immersing into lambdas and streams, this is the session for you.\r\nWe will start with lambda expressions, learn about how to use them and how they get implemented under the hood. Then we will swiftly move into learning about streams, the abstractions they provide, and a variety of operations we can do with them. We will conclude with a discussion  about lazy evaluations, infinite streams, and parallel collections.",
                "talkType": {
                    "id": "uni",
                    "label": "uni.label"
                },
                "title": "Get a Taste of Lambdas and Get Addicted to Streams",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "KKU-9095",
                "lang": "en",
                "mainSpeaker": "Davy Engone",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Even if Angular2 is still in development phase,  you can already build your next application using it today or make your current applications Angular2-ready.\r\n\r\nDuring this talk, we will show you techniques that will help you transition to Angular2 smoothly.\r\n\r\nWriting Angular2 applications is way easier using ES6 or TypeScript as recommended by the Angular team at Google. We will also cover TypeScript features that make it a breeze to develop enterprise applications using Angular2.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Getting Ready for Angular2",
                "track": {
                    "id": "web",
                    "label": "web.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "UJI-5122",
                "lang": "en",
                "mainSpeaker": "Philippe De Ryck",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Single page web applications (SPA) with a RESTful backend have profoundly changed the way web applications are developed, as more functionality is pushed towards the browser, both on traditional platforms and on mobile platforms. The underlying security mechanisms and policies, however, have not changed, and building secure applications still requires significant knowledge and effort from the developer. \r\n\r\nIn this session, we will investigate the impact of this paradigm shift on the architecture of web applications and their security model. We zoom into concrete vulnerabilities and their countermeasures. Concretely, we will look into the following topics: Cross-site scripting (XSS) in SPA, and how to counter it; The combination of the rising Content Security Policy (CSP) and SPAs; Session management with a RESTful API, and the consequences of the different options; The relevance of cross-site request forgery (CSRF) attacks in combination with a RESTful API, and how to defend against them.\r\n\r\nThe content in this session is relevant for every SPA framework, but practical examples will be mainly in AngularJS.",
                "talkType": {
                    "id": "uni",
                    "label": "uni.label"
                },
                "title": "Getting Single Page Application Security Right",
                "track": {
                    "id": "archisec",
                    "label": "archisec.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "SXG-4065",
                "lang": "en",
                "mainSpeaker": "Josh Long",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Spring Cloud is here! It offers a powerful way to create and consume microservices. As you introduce new services, you introduce integration problems: services can be shaky, they can disappear and - as they're often exposed over HTTP - they require a bit more footwork than in-process method invocations. In this webinar, we'll focus specifically on how Spring Cloud integrates service registration (e.g. Eureka), declarative REST clients (with Netflix's Feign), reactive programming and the circuit breaker pattern with Hystrix to support easy, robust service-to-service invocations, and messaging microservices with Spring Cloud Stream. This is a deep dive on how to make connect and consume microservices, and is a natural next step after the introduction to building microservices with Spring Boot.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Getting started with Spring Cloud",
                "track": {
                    "id": "cloud",
                    "label": "cloud.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "WRZ-1583",
                "lang": "en",
                "mainSpeaker": "Maurice Naftalin",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Kirk Pepperdine",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Java 8 streams are currently a major focus of developer interest. As an alternative to iterative processing, stream code with lambdas has great advantages in conciseness and readability. But how fast is it? In this session we'll use case studies to illustrate the performance advantages\u2014and pitfalls\u2014of streams, both sequential and parallel. \r\n\r\nThe session will place the discussion of stream code performance in the framework of a structured approach to analysing performance problems, one that can be applied to measuring and tuning any Java application.",
                "talkType": {
                    "id": "uni",
                    "label": "uni.label"
                },
                "title": "Good and Wicked Fairies, and the Tragedy of the Commons: Understanding the Performance of Java 8 Streams",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "ZBM-9672",
                "lang": "en",
                "mainSpeaker": "Christian Wirth",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "We present Graal.JS, a JavaScript engine implemented in Java, compatible to the ECMAScript 262 Version 6 standard. Graal.JS is executed on top of the Graal VM (http://openjdk.java.net/projects/graal/). The Graal Java compiler ensures high performant execution of the JavaScript applications. The engine offers support for parallel execution of JavaScript functions via a dedicated API and runtime support. Additionally, it supports interoperability with Java, and other languages based on Truffle like Ruby, Python, or R. The session will give an overview of the architecture of the Graal.JS and include example applications running on top of the system, e.g. applications from the Node.JS ecosystem accessing databases in an optimised way.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Graal.JS - high-performance JavaScript on the JVM",
                "track": {
                    "id": "lang",
                    "label": "lang.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "TJD-1379",
                "lang": "en",
                "mainSpeaker": "Simone Bordet",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "HTTP 2.0 is supposed to be the next big thing for the web, after the overwhelming success of HTTP 1.1. In this session we will examine the HTTP 2.0 protocol, what is the status of its specification, what features does it offer over HTTP 1.1, and how websites can benefit (in speed and money) from it. The session will also explore what does it take to write HTTP 2.0 applications in the Java platform, what plans there are to support it in JDK 9 and which Servlet Containers are already offering HTTP 2.0 support, finishing up with a demo of HTTP 2.0 new features.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "HTTP 2.0 & Java: Current Status",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "AHP-5608",
                "lang": "en",
                "mainSpeaker": "Brian Clozel",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "The HTTP/2 spec is here - clients are servers are racing to implement it, while browser support is increasing everyday... The JVM world is already working on it in the Servlet 4.0 and JDK9 specs.\r\n\r\nBut we developers, are still trying to understand the implications of it.\r\nShould we reconsider the way we build JavaScript applications and optimize them for front-end performance? Will our server application have new roles and abilities?\r\n\r\nIn this talk we'll look at the main features of HTTP/2 to understand how it will dramatically improve latency on the web. We'll also discuss with concrete examples how HTTP/2 could be integrated in our front-end and Java Web applications.",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "HTTP/2 for the Web developer",
                "track": {
                    "id": "web",
                    "label": "web.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "BYD-5040",
                "lang": "en",
                "mainSpeaker": "Horacio Gonzalez",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Audrey Neveu",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "The W3C has been working on a Web Components standard for almost three years, but it is still a work in progress. But polyfills like allows current developers to use Web Components today, and incorporate to their apps widgets from any library  of web components. \r\n\r\nThe best known of these libraries is Google's Polymer. In Google IO 2015 conference, Google has at last released the long awaited version 1.0 of Polymer, making it even faster, more stable and at least suitable for \"serious\" applications. In this lab you will use Polymer 1.0 with Material Design Polymer Elements to design and develop a web application using web components.\r\n\r\nYou will learn to use the following technologies:\r\n- Polymer and Web Components (for mobile and desktop)\r\n- The Paper Elements for Polymer (material design)\r\n\r\nMandatory Installs prior to lab:\r\n+ npm \r\n+ bower\r\n+ your favorite HTML/CSS/JS IDE (I suggest Sublime Text)",
                "talkType": {
                    "id": "lab",
                    "label": "lab.label"
                },
                "title": "Hand's on Web Components with Polymer 1.0",
                "track": {
                    "id": "web",
                    "label": "web.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d3",
                "event": "Devoxx Belgium 2015",
                "id": "ZCX-2430",
                "lang": "en",
                "mainSpeaker": "Danny Hyun",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Jeff Beck",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "In this workshop we will go from 0 to running a non trivial Java application with Ratpack. And when I say \"we\", I mean you!\r\n\r\nYou will need a laptop. And if you haven't already, have Java 8 installed.\r\n\r\nWe will touch on as many of following as time permits:\r\n    Getting started,\r\n    Handlers,\r\n    The Context, \r\n    Renderers, \r\n    Testing, \r\n    Error handling, \r\n    Blocking operations, \r\n    Metrics, \r\n    Security ....",
                "talkType": {
                    "id": "lab",
                    "label": "lab.label"
                },
                "title": "Hands on Ratpack",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                }
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "QRR-2871",
                "lang": "en",
                "mainSpeaker": "Tom Vleminckx ",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "In this talk we will introduce the JMH benchmarking framework and walk the attendees through some simple, yet practical examples.  We will target raw performance improvements , but also show how the approach helps to hunt down race-conditions and deadlocks in your code.\r\nWe'll also cover the build-in profiler support and show how to automate the tests from gradle.",
                "talkType": {
                    "id": "tia",
                    "label": "tia.label"
                },
                "title": "Hands-on with JMH, become a benchmarking expert in 30 minutes!",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "IUY-5780",
                "lang": "en",
                "mainSpeaker": "Taylan Pince",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "As software developers, it has been historically hard to get into hardware and electronics. However, that trend has been rapidly changing with the introduction of Arduino, Raspberry Pi and other similar hardware platforms that took a lot of complexities and mystery out of electronics.\r\n\r\nIn this talk, I will give a brief overview of what options software developers have today for exploring the world of hardware devices. I will show examples of how easy it is to build your own prototypes, what kind of tools you can use, and what roadblocks you can expect. In addition, I will speak about my experience building robots and internet of things devices using Arduino, Bluetooth LE and iBeacons.\r\n\r\nThis won\u2019t be your usual \u201clet\u2019s blink this LED\u201d Arduino talk. I am going to get into intermediate to advanced subjects such as Bluetooth LE integration, interfacing with your own memory modules, importance of enclosure design and how to turn your prototype into an actual product.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Hardware Prototyping for Software People",
                "track": {
                    "id": "future",
                    "label": "future.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "RTO-8068",
                "lang": "en",
                "mainSpeaker": "Gerrit Grunwald",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "The Healthcare situation in cities might be good but for the elderly population on the country side it is often problematic.\r\nIn this session it will be shown how one can use a mobile phone and a smart watch in combination with a Java based gateway and iBeacons to monitor the activity of elderly people. With the help of an IoT Cloud Service this data can be analyzed to detect situations that might be critical (illness, bone fracture etc.). If such a case was detected the Cloud Service can trigger Enterprise applications. With this approach it might be possible to connect such a system to existing Healthcare Applications. This session will give you an idea how you can combine existing technologies to do something useful and help elderly people in case of an emergency by using existing technologies.\r\n",
                "talkType": {
                    "id": "bof",
                    "label": "bof.label"
                },
                "title": "Healthcare for the Elderly using the IoT",
                "track": {
                    "id": "future",
                    "label": "future.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l3",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "WOT-4774",
                "lang": "en",
                "mainSpeaker": "Sebastiano Poggi",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Eugenio Marletti",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "What is text? The answer of those who know, and like 90s music, is most likely \"baby don't hurt me, don't hurt me, no more\". It is often said that text is the most difficult part of a graphics toolkit, and that is for good reasons. In this talk we\u2019re going to give you the tools you need to understand text, and bend this mysterious creature to your will.\r\n\r\nFrom the typography theory behind the fonts system, to the intricacies of supporting Unicode bidirectional text runs, to the typesetting itself, that would be enough to drive someone crazy. And there's still nothing being drawn on screen, with that alone!\r\n\r\nNext you'll need to have a text rendering engine that takes care of loading the fonts, laying out the glyphs, taking care of hinting too, and then actually draw them somewhere (let alone doing all this in a performant way).\r\n\r\nStill here? Good, then prepare for a journey that will take you through the history, implementation and pain of dealing with text. Behold the amazing powers you\u2019ll acquire, enabling you to tame all kinds of text you\u2019ll see on Android.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Hinting around: Android text demystified",
                "track": {
                    "id": "mobile",
                    "label": "mobile.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "ZEG-4288",
                "lang": "en",
                "mainSpeaker": "Clement Escoffier",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Paulo Lopes",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "This session presents how you can develop a realtime web application with vert.x web. In this context, a small game is going to be developed on stage demonstrating how easy it is to build such kind of applications with Vert.x 3. Of course attendees can play the game.",
                "talkType": {
                    "id": "tia",
                    "label": "tia.label"
                },
                "title": "Hit the plumber - develop a realtime web application with vert.x 3",
                "track": {
                    "id": "web",
                    "label": "web.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "RKN-2472",
                "lang": "en",
                "mainSpeaker": "Ivar Grimstad",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Do you find the daily commute to work tedious and boring? Same routine every day?\r\n\r\nWell, don't worry! \r\n\r\nIn this short talk I will demonstrate 20 alternative ways to spice up this daily activity. Some more efficient than others. Some more practical than others. Some more fun than others.",
                "talkType": {
                    "id": "ignite",
                    "label": "ignite.label"
                },
                "title": "How to Break Your Daily Routine - 20 Ways of Commuting to Work",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "NUJ-6773",
                "lang": "en",
                "mainSpeaker": "Pierre Laporte",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Benchmarks are one of the best ways to start zealot wars, feed trolls and take bad decisions. Yet, a lot of mistakes can be made, without even realizing it.\r\n\r\nIn this session, we will discuss the important metrics to measure, why they are important, we will analyze whether we should measure an average latency, and finally we will explain what the Coordinated Omission issue is.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "How to fail at benchmarking?",
                "track": {
                    "id": "archisec",
                    "label": "archisec.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "TKD-2630",
                "lang": "en",
                "mainSpeaker": "Roland Hu\u00df",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "You want to grow your chilli pepper on your own ? You don't live in India or South America ? \r\n\r\nNo problem, it doesn't need much to grow your own peppers at home, even in gloomy central Europe. This talk provides tips and tricks for your next chili balcony, including a secret recipe for the perfect soil mixture, revelation of the world's best seed store, how to fertilize and more.\r\n\r\nCome to this session and you are prepared for your first own grown chili peppers next year. ",
                "talkType": {
                    "id": "ignite",
                    "label": "ignite.label"
                },
                "title": "How to grow Chili Peppers",
                "track": {
                    "id": "future",
                    "label": "future.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "QAT-5309",
                "lang": "en",
                "mainSpeaker": "Maria Khalusova",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": true,
                "state": {
                    "code": "accepted"
                },
                "summary": "Many teams are adopting code review now, and then find themselves struggling to make it work. Do you feel that it takes too much time? Do you think the issues that reviewers find are not really deal-breakers? Are you afraid that instead of improved collaboration you are creating a battlefield over the code base? There are a number of things that you can do to make code reviews go smoothly and bring meaningful, useful results. We\u2019ll talk about how we can make code reviews transparent and efficient. We\u2019ll outline what things we should be looking for when reviewing someone else's code, and how not to lose focus hunting extra spaces. And more importantly, we\u2019ll talk about the human factor, and how while it\u2019s not always possible to separate a code from its authors, there are ways to communicate messages effectively. ",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "How to stop wasting your time and start performing useful code reviews",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "OJB-1497",
                "lang": "en",
                "mainSpeaker": "Patrick Curran",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "The Java Community Process (JCP) is key to the evolution of Java. This session emphasizes the value of transparency and participation in the JCP program, through both Java User Groups (JUGs), and through the Adopt-a-JSR program. Find out how to become an active participant in advancing the Java platform - JSRs for Java EE 8 and Java SE 9 are being developed now.",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "How you can play a part in evolving Java",
                "track": {
                    "id": "java",
                    "label": "java.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "IND-3095",
                "lang": "en",
                "mainSpeaker": "Amira LAKHAL",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "IOT has a massive potential and its impact in our daily life is important.\r\nHere is an exemple of using a connected object and analysing its data:\r\nwe'll see how to collect data using the accelerometer sensor of your smartphone. \r\nThen, we'll store it in Cassandra as a Timeseries model.\r\nFinally, we'll analyse those data and predict the activity with Spark.\r\nWe will see a live demo on stage to show this solution working in realtime.\r\n \r\n",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "IOT, timeseries and prediction with Android, Cassandra and Spark",
                "track": {
                    "id": "cloud",
                    "label": "cloud.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "MBA-9232",
                "lang": "en",
                "mainSpeaker": "Sven Reimers",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Already heard about NetBeans Platform, but never tried it yourself? Afraid of getting tied to a special rich client framework? This session will show you the status quo of NetBeans Platform development and will boldly take you on a journey of UI evolution from Swing to JavaFX - where you have not gone before. All this will be driven by numerous live demos to enhance your NetBeans Platform experience!",
                "talkType": {
                    "id": "bof",
                    "label": "bof.label"
                },
                "title": "Inifinite Evolution - How to Transform Your UX!",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "ALC-2222",
                "lang": "en",
                "mainSpeaker": "Erik-Berndt Scheper",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "This session is intended as an open discussion about integration testing using Arquillian, with an emphasis on the integration points with Docker and Maven. \r\n\r\nAside from the Arquillian Cube extension, there are various Maven plugins available on the internet. Many of these, or at least the more commonly used, will feature in this session.\r\n\r\nTo start the discussion, the presentation will commence with a comparison of various alternatives and live coding of a working example, during which everyone is invited to comment and participate.\r\n\r\nAt the end of the session the attendees should have at least a basic understanding of  the new possibilities these technologies bring, and hopefully be as enthusiastic about them as I am.",
                "talkType": {
                    "id": "bof",
                    "label": "bof.label"
                },
                "title": "Integration testing with Maven, Arquillian and Docker Maven plugins",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "ECB-9207",
                "lang": "en",
                "mainSpeaker": "Mark Reinhold",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Alan Bateman",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "A gentle introduction, with examples, to the forthcoming Java Platform Module System.  Learn how to create a module from scratch, compile it, test it, and run it.  This session will also show basic techniques for modularizing existing libraries and applications.\r\n",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Introduction to Modular Development",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "UYY-1043",
                "lang": "en",
                "mainSpeaker": "Chris Dennis",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Is the cutting edge of Java, and the resultant exposed API surface area growing so fast that the bulk of Java developers cannot keep up?  What fraction of our community has a good conceptual grasp of the features introduced by Java 1.8, 1.7, 1.6 or even 1.5?  What fraction of Java developers can explain what the volatile keyword means?  What fraction of Java developers would consider themselves proficient with generics?\r\n\r\nWhy does this problem exist? Is something wrong with the way developers are or were initially educated? Is there a lack of continuing education in the industry?\r\n\r\nIs this a problem with the features we are adding? If the bulk of our developers are not pushing at the edges of Java, then who is? Do the needs of those hardcore developers working at the cutting edge adequately represent the needs of the broader community. Is it healthy that developers only use these new features through the insulating layer of frameworks written by the hardcore developers?\r\n\r\nIs this just a problem that is innate to any successful general purpose language, and what if anything should be done to fix it?",
                "talkType": {
                    "id": "bof",
                    "label": "bof.label"
                },
                "title": "Is There A Growing Knowledge Gap In The Java Community?",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "WLH-4256",
                "lang": "en",
                "mainSpeaker": "Saskia Vermeer - Ooms",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Most of us have now adopted the agile way of working in their workplace. In many cases it has shown us how to bring structure into our work process and with each iteration helping us to improve the way we do things. More and more we are also seeing the Agile framework being adopted by other environments which are not always IT related.\r\nIf this way of working is a success at our office and can also help improve processes in other environments, why not try it out within our own home? Hence, the start of the Agile Family. \r\n\r\n",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "It started with a whiteboard in the kitchen - Experiences from an Agile Family",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "MOO-6565",
                "lang": "en",
                "mainSpeaker": "Charles Nutter",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Ruby has come a long way since JRuby first ran Rails in 2006.\r\nFrameworks like Rails have grown up with the modern web, now\r\nsupporting web sockets, microservices, and integration with Javascript\r\nclient libraries like Ember. Concurrency utilities modeled after the\r\nJDK are helping Ruby scale horizontally. Applications can be built\r\nwith Rake - or with JRuby plugins for Gradle and Maven. Maven poms can\r\nbe written in a beautiful Ruby DSL. Swing, JavaFX, and other graphics\r\nlibraries become easy and fun with JRuby. Sass and Asciidoctor are\r\nalready being used in Java apps thanks to JRuby. And you can bundle up\r\nthe whole thing in an executable jar or war file; your devops will\r\nnever know it's Ruby. Come see what JRuby 9000 can do for you in 2015.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "JRuby 9000",
                "track": {
                    "id": "lang",
                    "label": "lang.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "FCX-4705",
                "lang": "en",
                "mainSpeaker": "Cagatay Civici",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "JSF has come a long way since its initial release and managed to catch up with modern web development model. Combined with the popular PrimeFaces framework, JSF unleashes its true potential. \r\n\r\nThis session takes you on a tour of modern component based java development with server rendering featuring rich set of components, responsive design, powerful Ajax APIs, a real-time push framework with websockets, a mobile web renderkit, the dialog framework, extensive client-side validation and attractive page layouts.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "JSF with PrimeFaces, From Ugly Duckling to a Beautiful Swan",
                "track": {
                    "id": "web",
                    "label": "web.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "ZMA-1426",
                "lang": "en",
                "mainSpeaker": "Robert Field",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Read-Execute-Print-Loops (REPLs) have emerged as powerful tools for learning and prototyping.  JShell brings this power to Java.  Targeted for JDK 9, and tightly integrated with the Java compiler and virtual machine, JShell enhances the programming experience for the Java language.\r\n\r\nLearn how to use JShell to explore new APIs, prototype code, or learn the Java language.  Interactively explore new features of JDK 9.  See the features that speed coding.\r\n\r\nThen take a peek under the hood to get an overview of how the JShell architecture fits in the Java platform.  Learn how features like forward-reference are implemented.  See how, with a few lines of code, the JShell API can enhance other tools.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "JShell: An Interactive Shell for the Java Platform",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "SVC-1438",
                "lang": "en",
                "mainSpeaker": "Ryan McGuinness",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Walmart is the worlds largest retailer and consistently in the top five online retailers.\r\n\r\nOur customers are number one, always! Walmart.com is a polyglot of Open Source technologies for mobile, java, java ee, node.js, absolutely huge data (big data is just too small), and many more. Join Ryan McGuinness, Principal Architect, from @WalmartLabs to discuss the challenges of DevOps @Scale and building a sustainable, customer focused global platform.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Java & DevOps @Global Scale",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "XQF-4209",
                "lang": "en",
                "mainSpeaker": "Jos\u00e9 Paumard",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "The Stream API is among the most important API introduced in the JDK 8. New patterns have been introduced, enabling new ways to process data, especially in parallel. The Java 8 Stream API is not alone on this segment. We would like to present here RxJava, a popular API, brought by Netflix. The patterns offered by this API are quite different from the Stream API. This presentation compares those two APIs, from the developer point of view. What patterns are proposed on both sides, and what are the performances of those patterns. Many examples and benchmarks (using JMH) are shown. The goal is not to state which one of those APIs is the best, but merely give keys to decide which one is the best suited for my application. \r\n",
                "talkType": {
                    "id": "uni",
                    "label": "uni.label"
                },
                "title": "Java 8 Stream and RxJava comparison: patterns and performances",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "SXA-8702",
                "lang": "en",
                "mainSpeaker": "Stephen Chin",
                "otherSpeakers": [
                    "Lucy Carey"
                ],
                "privateMessage": "",
                "secondarySpeaker": "Yolande Poirier",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "You ever wonder how to start your own Java User Group?  Maybe how to become a Java Champion or JavaOne Rock Star?  Did you ever wonder how you could get published in Java Magazine?  Perhaps you were interested to know how join the JCP and sit on an Expert Group.  In this presentation you will learn all of the insider secrets on how to become a presence in the worldwide community of 9 million Java developers.\r\n\r\nWarning: Community social engagement is highly addictive and can cause one or more of the following symptoms:\r\n\r\n* Difficulty keeping track of your thousands of \u201cfollowers\u201d and \u201cfriends\u201d\r\n* More \u201cfree stuff\u201d than you can store in your garage\r\n* Humbling run-ins with language designers, JVM gurus, and framework authors\r\n* Unsolicited, crazy job offers! [e.g. Snorkeling in the Pacific to test your steering algorithm]\r\n\r\nCome learn how the Java Community ticks from someone who has gone from Java coder to Java Champion and now is a humble Java Community Servant.",
                "talkType": {
                    "id": "bof",
                    "label": "bof.label"
                },
                "title": "Java Community Insider Secrets!",
                "track": {
                    "id": "java",
                    "label": "java.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "XYJ-4708",
                "lang": "en",
                "mainSpeaker": "Reza Rahman",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "This workshop traverses the new features in Java EE 7 by introducing the Cargo Tracker application. This end-to-end example is a new project on java.net. Cargo Tracker brings back some of the ideas of the Java EE Blue Prints efforts of years past. Some of the new Java EE 7 features demonstrated in Cargo Tracker include JMS 2, WebSockets, JSON-P, JAX-RS 2, JSF 2.2, JPA 2.1 and Java Batch.\r\n\r\nThis is your chance to look at Java EE 7 features in the context of a realistic application, available with an MIT license at http://cargotracker.java.net.",
                "talkType": {
                    "id": "uni",
                    "label": "uni.label"
                },
                "title": "Java EE 7 in Action",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d4",
                "event": "Devoxx Belgium 2015",
                "id": "BBB-1594",
                "lang": "en",
                "mainSpeaker": "David Delabassee",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "The Java EE BoF is yet another Devoxx tradition and since Java EE 8 is getting closer and closer, it's another good reason to meet and discuss!\r\nJoin this informal gathering to discuss with the different Java EE Specification Leads present and other Java EE enthusiasts.",
                "talkType": {
                    "id": "bof",
                    "label": "bof.label"
                },
                "title": "Java EE Gathering",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "GUD-4903",
                "lang": "en",
                "mainSpeaker": "Mike Croft",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Microservices are the latest new-but-not-really-new thing that developers are talking about, and the Java EE world is no exception. In this short talk, Mike will use some new features of Payara that bring the power of Hazelcast to Java EE microservices, while still keeping the overall footprint incredibly low.",
                "talkType": {
                    "id": "tia",
                    "label": "tia.label"
                },
                "title": "Java EE Microservices - the Payara way",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "YZQ-5038",
                "lang": "en",
                "mainSpeaker": "Jean-Louis Monteiro",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Security in Java EE has long been under used and under specified. The existing set of specifications range from overly complex to non-existent. The result is almost no one uses Java EE security. Java EE 8 is upon us and with it brings another opportunity to clean the slate and create something useful. This working session is intended to get attendees quickly up to speed with the current state of affairs, poll information from the audience then pose the question of how do we move forward?",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Java EE Security API",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "EFO-4499",
                "lang": "en",
                "mainSpeaker": "Richard Warburton",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Raoul-Gabriel Urma",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Generics are one of the most complex features of Java. They are often poorly understood and lead to confusing errors. Unfortunately, it won\u2019t get easier. Java 10, release planned for 2018, extends Generics. It\u2019s now time to understand generics or risk being left behind.\r\n\r\nWe start by stepping back into the halcyon days of 2004 and explain why generics were introduced in the first place back. We also explain why Java\u2019s implementation is unique compared to similar features in other programming languages.\r\n\r\nThen we travel to the present to explaining how to make effective use of Generics. We then explore various entertaining code examples and puzzlers of how Generics are used today.\r\n\r\nFinally, this talk sheds light on the planned changes in Java 10 with practical code examples and related ideas from other programming languages. If you ever wanted to understand the buzz around primitive specialisation or declaration site variance now is your chance!",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Java Generics: Past, Present and Future",
                "track": {
                    "id": "java",
                    "label": "java.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d4",
                "event": "Devoxx Belgium 2015",
                "id": "DVW-0919",
                "lang": "en",
                "mainSpeaker": "Kirk Pepperdine",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "This will be a group therapy session where we can all talk about our performance problems and concerns. If anyone had data, such as a garbage collection log, this is the place to bring it.",
                "talkType": {
                    "id": "bof",
                    "label": "bof.label"
                },
                "title": "Java Performance BOF",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "CIU-0634",
                "lang": "en",
                "mainSpeaker": "David Delabassee",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Jos\u00e9 Paumard",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Java SE 8 brings a bounty of improvements - Lambda Expressions, the new Date Time API, Completable Futures, streams and the fork/join common pool. In this code intensive session we will explore how these Java SE 8 features can be utilized inside Java EE 7 applications with APIs such as Servlet, JAX-RS, WebSocket, CDI, EJB 3, JPA, JMS and Java EE Concurrency Utilities.\r\nWe will also briefly explore how Java SE 8 features could be effectively incorporated into Java EE 8 and beyond.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Java SE 8 for Java EE Developers",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "DPT-9295",
                "lang": "en",
                "mainSpeaker": "Peter Hendriks",
                "otherSpeakers": [
                    "Bert Jan Schrijver",
                    "Richard Kettelerij",
                    "Roy van Rijn"
                ],
                "privateMessage": "",
                "secondarySpeaker": "Tim Prijn",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Test your knowledge with fun and interesting questions about the programming language we all love: Java. Presented in a dynamic , fast paced pub quiz style, with awesome visuals, co-created with a current world Guinness quiz record holder!  Bring a friend or just join up; there are plenty of prizes and beer!\r\n\r\nMaximum number of participants: 40 people, first-come first-served.",
                "talkType": {
                    "id": "bof",
                    "label": "bof.label"
                },
                "title": "Java pub quiz BoF",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "UNJ-5508",
                "lang": "en",
                "mainSpeaker": "Stefan Baumgartner",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "With JavaScript being no toy language anymore our demands on a high quality development environment have risen tremendously. One part of a good development environment are build tools, and Gulp.js -- being the JavaScript streaming build system -- is but one of the many choices a developer has nowadays. For many however, it's considered to be the best! \r\nIn this three hour workshop, we will take a good look into Gulp and its possibilities. After our in-depth 3 hour course you will be able to do the following:\r\n\r\n- Know how Gulp's API and the ecosystem of its plugins work\r\n- Create parallel and sequential execution chains to be in total control of your build flow\r\n- Know how 3rd party Node modules evolve around Gulp and how they can be integrated\r\n- Use Gulp to build complex React.js, Angular.js and Browserify applications\r\n- Become master at file globbing and asynchronous build pipelines\r\n- Create incremental builds to speed up your build time\r\n- Know how streams work in Node.js\r\n- And use stream arrays and merge streams to plumb together sophisticated pipelines doing all the work for you\r\n\r\nJoin us and become a build plumber!",
                "talkType": {
                    "id": "uni",
                    "label": "uni.label"
                },
                "title": "JavaScript build pipelines with Gulp.js",
                "track": {
                    "id": "web",
                    "label": "web.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "RST-6571",
                "lang": "en",
                "mainSpeaker": "Quentin ADAM",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "show and how to of json2caseclass",
                "talkType": {
                    "id": "ignite",
                    "label": "ignite.label"
                },
                "title": "Json2caseclass tool for scala dev",
                "track": {
                    "id": "lang",
                    "label": "lang.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "FJY-7230",
                "lang": "en",
                "mainSpeaker": "Steve Smith",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Git is rapidly taking over the development workplace, and nowadays it is integrated with many development, testing and deployment platforms. But one of the downsides of high-level tools is that they can hide the details of what is happening under the hood. So when things go wrong or just get complicated it can be hard to understand why git behaves the way it does. But at its core Git consists of a few simple concepts that, when understood, make it a much more intuitive tool and enables powerful workflows. This talk introduces these core Git concepts and uses them to clarify some examples of seemingly counterintuitive behaviour. It also introduces some of Git's less-known features and tricks that are useful to have in your arsenal. This is an intermediate-to-advanced course for developers who are already using or investigating Git and want to gain a greater understanding of how it works.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Knowledge is Power: Getting out of trouble by understanding Git",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "XPU-2437",
                "lang": "en",
                "mainSpeaker": "Nick Boucart",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Pricing is hard: set your price too high, and nobody will buy from you.  Set it too low, and you won\u2019t cover the costs to service your customers. Startups need to \u201cdiscover\u201d their ideal price, a process few founders are comfortable with.\r\n\r\nIn this session, you\u2019ll learn about the economics of pricing, you\u2019ll be presented with 11 different pricing methods, we\u2019ll discuss freemium vs. premium and give you tons of practical pricing advice for your startup.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Lean Pricing \u2013 Pricing Strategies for Startups",
                "track": {
                    "id": "startup",
                    "label": "startup.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "PUA-8708",
                "lang": "en",
                "mainSpeaker": "Sebastien Arbogast",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "In 2010, I was a freelance software developer, working for an eCustoms software provider. I had always wanted to create my own company but the more I learned about what seemed to be necessary to create your own business (writing a business plan, gathering 3-year projections about your market, etc.), the more I doubted my abilities to do it. And then thanks to a Startup Weekend, I discovered Lean Startup and it was a real aha moment to me. Finally something that spoke to my Agile developer's experience. Finally there was another way, a better way to create a startup, all based on experiments and iterations, minimizing waste and shipping stuff. I won the startup weekend and I took it as a wake-up call. A few weeks later, I quit my job and I started working on my first startup, Kodesk, using Lean Startup techniques extensively. I learned a lot in the process, made some mistakes, launched another project, tried to do better, didn't succeed, but yet again, improved my understanding of it. In this presentation, I'll share some of the basics of creating your startup as a bored developer, as well as my own experience with it.",
                "talkType": {
                    "id": "uni",
                    "label": "uni.label"
                },
                "title": "Lean Startup for Developers",
                "track": {
                    "id": "startup",
                    "label": "startup.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "MYX-0578",
                "lang": "en",
                "mainSpeaker": "Sebastien Arbogast",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "In 2010, I was a freelance software developer, working for an eCustoms software provider. I had always wanted to create my own company but the more I learned about what seemed to be necessary to create your own business (writing a business plan, gathering 3-year projections about your market, etc.), the more I doubted my abilities to do it. And then thanks to a Startup Weekend, I discovered Lean Startup and it was a real aha moment to me. Finally something that spoke to my Agile developer's experience. Finally there was another way, a better way to create a startup, all based on experiments and iterations, minimizing waste and shipping stuff. I won the startup weekend and I took it as a wake-up call. A few weeks later, I quit my job and I started working on my first startup, Kodesk, using Lean Startup techniques extensively. I learned a lot in the process, made some mistakes, launched another project, tried to do better, didn't succeed, but yet again, improved my understanding of it. In this presentation, I'll share some of the basics of creating your startup as a bored developer, as well as my own experience with it.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Lean Startup for Developers conference",
                "track": {
                    "id": "startup",
                    "label": "startup.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d4",
                "event": "Devoxx Belgium 2015",
                "id": "KZD-4178",
                "lang": "en",
                "mainSpeaker": "Guillaume Laforge",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Arnaud H\u00e9ritier",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Live podcast",
                "talkType": {
                    "id": "bof",
                    "label": "bof.label"
                },
                "title": "Les Cast Codeurs - En direct de Devoxx",
                "track": {
                    "id": "future",
                    "label": "future.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "TZA-2142",
                "lang": "en",
                "mainSpeaker": "Ernest Micklei",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Ubanita.com is a new cloud-based platform for multi-player, single-screen interactive games.\r\n\r\nOur objective: you code it, we run it,  everybody can play it.\r\n\r\nFor today's experience, we will play a game with as much as 100 players connected via Wifi.\r\n\r\nAll you need is your smartphone and a web address; no install or registration required.\r\nOnly with your effort and enthusiasm, we can make this happen. Hope you will enjoy it.",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "Let's have 100 phones connected to a cinema multi-player game",
                "track": {
                    "id": "future",
                    "label": "future.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "VBM-5418",
                "lang": "en",
                "mainSpeaker": "Nicolas Rigaud",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Jean-Philippe Chatain",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Robots are no longer the dream of some future. Robots are already here. And we\u2019re not talking about software bots or autonomous systems. We\u2019re talking about humanoids! Real robots evolving in the real world, the next generation of devices you might develop for.\r\n\r\nDuring this session, we'll show you how to create an application in Java, using Aldebaran APIs, to control our robot, and take advantage of human emotions to enhance the interaction.\r\n\r\nWe'll also discuss, along the way, the future of personal robotics and its different fields of application.\r\n\r\nFurthermore, for the first time in Europe, this session will be done with Pepper, the 1.2m tall robot Aldebaran created for the japanese market.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Let's have fun with Pepper robot and Java",
                "track": {
                    "id": "future",
                    "label": "future.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "CUA-4546",
                "lang": "en",
                "mainSpeaker": "Tony Printezis",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Twitter runs a swarm of services executing on several different managed runtimes. The services have migrated from mainly Ruby in the past to mostly Scala today. Targeting the JVM allows developers to quickly write and deploy reliable code. Automated memory management, in particular, improves productivity of teams in a fast paced environment. But with these benefits also come challenges. The way code is executed on the JVM makes trouble-shooting quite tricky, especially in production, as it is often difficult for developers to understand what has gone wrong and how to fix it. To make matters even more challenging, the sheer volume of data that flows through these services and their stringent requirements, stress the JVM in different and novel ways.\r\n\r\nThe talk will cover:\r\n\r\n* Overview of how services are deployed and monitored at Twitter.\r\n* Benefits of using a custom-built JVM with in-house features.\r\n* Challenges of the use of the JVM in an environment like Twitter.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Life of a Twitter JVM engineer: the garbage keeps coming... ",
                "track": {
                    "id": "lang",
                    "label": "lang.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "XED-2224",
                "lang": "en",
                "mainSpeaker": "Alexander Schwartz",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Log messages in files are a pain: they are hard to get hold of, difficult to search, and different sources are tedious to combine. This talk shows you ways to use logs as a real time source of information to react on problems \u2013 even before your users file a ticket!",
                "talkType": {
                    "id": "ignite",
                    "label": "ignite.label"
                },
                "title": "Logs live and in color \u2013 say goodbye to old school log files",
                "track": {
                    "id": "archisec",
                    "label": "archisec.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "UZB-7397",
                "lang": "en",
                "mainSpeaker": "Michael Wiedeking",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Do you know that you are most likely still using a font which has been used since the invention of the typewriter? Did you know that this font has also been used for punch cards? Have you never heard of high resolution displays and proportional fonts? This Quickie shows you how to use a proper font to display not only working but also good looking programs.",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "Looking good: Typography and programming languages",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "HBU-7646",
                "lang": "en",
                "mainSpeaker": "Michael Wiedeking",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Do you know that you are most likely still using a font which has been used since the invention of the typewriter? Did you know that this font has also been used for punch cards? Have you never heard of high resolution displays and proportional fonts? This Quickie shows you how to use a proper font to display not only working but also good looking programs.",
                "talkType": {
                    "id": "ignite",
                    "label": "ignite.label"
                },
                "title": "Looking good: Typography and programming languages",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "YMF-6870",
                "lang": "en",
                "mainSpeaker": "Ivar Grimstad",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Rene Gielen",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "There's a new cool kid in town: JSR 371, ambiguously named MVC Specification, brings the action based web framework paradigm to the upcoming Java EE 8 release \u00ad finally, 15 year after the rise (and later fall) of Apache Struts 1. Similar to Unix, action based server side web frameworks seem to be fashionable again after being considered stone age technology not long ago.\r\n\r\nIn this session we will go through the fundamentals of the MVC 1.0 specification and explain the core concepts. Lots of code samples will be included, as well as tips on how to get started using this awesome technology.\r\n\r\nWe will also investigate chances and risks of JSR 371. In particular we will check how the new specification can compete with established Servlet based action frameworks such as Spring MVC or Struts 2.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "MVC 1.0 - by Example",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "EXY-3088",
                "lang": "en",
                "mainSpeaker": "Celestino Bellone",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Federico Yankelevich",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Last year at Devoxx UK a couple of attendees grabbed the organisers and explained their vision: to have a Devoxx type event in their own backyard in the south of Switzerland. As they pointed out, not every developer gets the chance to travel internationally to a conference and learn great things. Fast forward 9 months and they were organising a Voxxed Days event in Ticino, where 300 local developers came to learn about the latest emerging technologies and methodologies. Join Federico and Celestino and hear about their efforts to bring awesome tech coolness to the beautiful city of Lugano, how they built an open source ticketing system, their many sleepless nights, how they gained sponsorship from local and international companies, and how the community around them will benefit. You might also hear that they loved it so much, their doing the same now in Zurich too.",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "Making Events for local dev Communities",
                "track": {
                    "id": "startup",
                    "label": "startup.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "KUB-8320",
                "lang": "en",
                "mainSpeaker": "Marc Sluiter",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Containerising your applications with Docker gets more and more attraction. While managing your Docker containers on your developer machine or on a single server is not a big hassle, it can get uncomfortable very quickly when you want to deploy your containers in a cluster, no matter if in the cloud or on premises. How do you provide high availability, scaling and monitoring? Fortunately there is a rapidly growing ecosystem around docker, and there are tools available which support you with this.\r\nIn this session I want to introduce you to Kubernetes, the Docker orchestration tool started and open sourced by Google. Based on the experience with their data centers, Google uses some interesting declarative concepts like pods, replication controllers and services in Kubernetes, which I will explain to you. While Kubernetes still is a quite young project, it reached its first stable version this summer, thanks to many contributions by Red Hat, Microsoft, IBM and many more.",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "Managing Docker containers in a cluster - introducing Kubernetes",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "MNI-7397",
                "lang": "en",
                "mainSpeaker": "Milen Dyankov",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Everyone is talking about microservices these days! So the question is should you also jump on that bandwagon and why those somewhat older colleagues of yours (yep, those that still remember the EJB 2 revolution) are not that enthusiastic? To help you make the right decisions, this talk will first focus on explaining complexity - the problem microservices claim to solve. It then will concentrate on modular architecture and how it compares to what most people understand by microservices! Live demo will present multiple ways to modularize existing JEE application going from \"monolithic\" Glassfish EJB/JSF style app through SpringBoot and OSGi to reach a distributed system with a portal as front-end.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Microservices and Modularity or the difference between treatment and cure!",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "UFT-4605",
                "lang": "en",
                "mainSpeaker": "Alex Van Boxel",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "This quickly will give an overview of the steps we had to take migrating the Devoxx registration, a legacy \"Tomcat/Spring\" application, to docker and deploy it on a Kubernetes cluster (in our case Google Container Engine). This walk through will show you how easy it is to start containerising your apps.",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "Migrating Devoxx Registration to Docker and Kubernetes",
                "track": {
                    "id": "cloud",
                    "label": "cloud.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "EFW-9327",
                "lang": "en",
                "mainSpeaker": "Felix Schulze",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Testing Apps is really important for the stability of your apps. Learn what are the best practices to ensure the quality of your apps. See how we optimized our workflow at AutoScout24 for testing android and iOS apps.\r\nYou will get information about a lot of tools and how you could use them easily.\r\nAlso you can see what are the pitfalls and problems we run into developing our workflow.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Mobile App Testing @AutoScout24",
                "track": {
                    "id": "mobile",
                    "label": "mobile.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "DAR-6586",
                "lang": "en",
                "mainSpeaker": "Juergen Hoeller",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Spring's programming and configuration model has a strong design philosophy with respect to application components and configuration artifacts. Spring's annotation-based component story is fine-tuned for source code readability as well as consistency across an entire application's codebase. This session presents selected Spring Framework 4 component model highlights, with a focus on the upcoming Spring Framework 4.2 and a selection of Java 8 enabled features, illustrated with many code examples and noteworthy design considerations.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Modern Java Component Design with Spring 4.2",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "MLP-5950",
                "lang": "en",
                "mainSpeaker": "Christophe Jollivet",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "So you decided to follow the fashion and just went for the XXXX Javascript Framework  for the front part of your application, or even more you made the big jump and decided to go with a full stack JavaScript application.So now, how are you going to debug this application? Do you still do this old \u00ab\u00a0alert\u00a0\u00bb debugging or are there some better ways to debug JavaScript ?\r\nDuring this tool in action, I will show you the modern state of Javascript debugging. Do you know that you can have some logs with formatting in the browser console or that you can choose between six types of breakpoints ? Do you know how to take advantage of the dynamic aspect of JavaScript to help you to debug your application ?\r\nDemonstrations will be done using Chrome dev tools, but most of the tips will be applicable with other browsers.",
                "talkType": {
                    "id": "tia",
                    "label": "tia.label"
                },
                "title": "Modern JavaScript debugging",
                "track": {
                    "id": "web",
                    "label": "web.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "FQM-0283",
                "lang": "en",
                "mainSpeaker": "Mark Reinhold",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Alan Bateman",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "First part will be a a gentle introduction, with examples, to the forthcoming Java Platform Module System. Learn how to create a module from scratch, compile it, test it, and run it. This session will also show basic techniques for modularizing existing libraries and applications.\r\n\r\nSecond part : Modularizing an existing library or application, or creating new modules from scratch, can raise many difficult and subtle design issues. This session will present a set of principles for modular development, with examples taken from the JDK itself.\r\n",
                "talkType": {
                    "id": "uni",
                    "label": "uni.label"
                },
                "title": "Modular Development with JDK 9",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "NMY-0505",
                "lang": "en",
                "mainSpeaker": "Norberto Leite",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Java 8 is here and with it a set of new functionality that everyone wants to make use of. This is a quick talk on how to make use of the features like Stream API, new Date API and Lambda Expressions within the context of data manipulation and processing.",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "MongoDB and Java8",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "ALS-4841",
                "lang": "en",
                "mainSpeaker": "Konrad Malawski",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "It's the year 2015, so unless you've been living under a rock for the last decade, you probably have heard about servers and platforms needing to go asynchronous in order to scale. But really, how deep did you dive into the reasons as why this need arrises? This talk aims to explain the various reasons and techniques that can be (and often are) used in developing high performance web applications - from the kernel depths, to the high level abstractions that all contribute to such designs.\r\n\r\nWe'll start with the lowest level of them all - the network transports we all use and how they impact latency in our systems. Then we will move on to operating systems' socket selector implementation details and the now legendary C10K problem, to see how implementations were forced to change in order to survive the ever-rising number of concurrent connections. Next we'll dive into processor and thread utilisation effects and how parallel programming - using either message-passing or stream processing style libraries fits into the grand picture of pursuing the most stable and lowest latency characteristics we could dream of.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Need for Async: In pursuit of internet-scale apps",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "DQG-1189",
                "lang": "en",
                "mainSpeaker": "Lutz Huehnken",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Until recently, concurrency in Java meant: java.util.concurrent and threads. \r\nThreads were originally envisioned as \"lightweight processes\" - starting a new process for concurrent operations meant to much overhead, and posed the problem of inter-process communication. Threads were supposed to be light and remove both disadvantages - less resource consumption for creation and scheduling, and shared memory. \r\nToday it seems this model has reached it's limits.  The context switch between threads is not a good match for modern processor architectures, resource needs are still to high for fine-grained concurrency, and shared mutual state is a curse, not a blessing, leading to race conditions, locks, contention. To quote Oracle JVM architect John Rose: \"Threads are pass\u00e9\".\r\nWe will explore different approaches to concurrency below the thread level, and have a look at their advantages and disadvantages. Namely we will look at Quasar Fibres, Clojure Agents, vert.x Verticles and Akka Actors.\r\n",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "New Concurrency Models on the JVM: Fibres, Verticles, Agents and Actors.",
                "track": {
                    "id": "java",
                    "label": "java.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "UZH-1741",
                "lang": "en",
                "mainSpeaker": "Philippe Charri\u00e8re",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Everyone is convinced that the ancestor of SkyNet, is the Turk (see The Sarah Connor Chronicles) ... Well no !, that is BOB! A robot on wheels (the \"T-0\"). And I'll explain how it all began.\r\n\r\nThe genesis of BOB (BOB = Bot with Operational Behavior):\r\n\r\nStep 1: a LED thermometer with an Arduino and Johnny-Five\r\n\r\nStep 2: SAM (I like to give nicknames to my toys), which will make obsolete the \"Nest\", with a Raspberry and GrovePi and SAM will discuss with the world through MQTT (with Mosca and CylonJS)\r\n\r\nStep 3: And finally, BOB, the T-0 with a Raspberry and GoPiGo ... And of course BOB and SAM will exchange information (through MQTT too)\r\n\r\nPrepare yourself to master Rise of the Machines ... with JavaScript ;)",
                "talkType": {
                    "id": "tia",
                    "label": "tia.label"
                },
                "title": "OMG! Terminator will be coded in JavaScript!",
                "track": {
                    "id": "future",
                    "label": "future.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "NLN-5251",
                "lang": "en",
                "mainSpeaker": "AMahdy AbdElAziz",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Vaadin is a framework and set of web components for rapid development of highly interactive HTML5-based web applications. This presentation will give a quick intro to a three core concepts that are the base of Vaadin Components: WebComponents, Polymer, and Offline First apps.\r\nYou will learn how to develop an Offline First web and mobile apps using Polymer, and how to integrate it with a Java backend using the power of Vaadin.",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "Offline-first web and mobile apps with Polymer and Vaadin",
                "track": {
                    "id": "mobile",
                    "label": "mobile.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "GKT-3437",
                "lang": "en",
                "mainSpeaker": "Bernd R\u00fccker",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": " \" If you developers cannot deliver any faster and cheaper, we will simply buy an expensive zero code BPM Suite that will solve all our problems!\" \u2013 famous last words of project managers (soon before they will hopefully get fired). However, there is an interesting alternative: With developer-friendly open source BPM platforms such as Camunda you get a workflow engine based on the BPMN 2.0 standard, business rule support based on the brand new DMN standard and case management based on CMMN. All this can be used embedded as a library but also in large scale scenarios, obviously also in SOA or microservice architectures. Leverage graphical but also executable notations for a new level of transparency in your development cycle as well as in operation. This talk will give you a hands-on introduction based on a real-life example as well as experiences from various projects. Live coding included \u2013 guaranteed developer-friendly!",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Open Source Workflows, Business Rules and Case Management live and in action \u2013 with Camunda BPM",
                "track": {
                    "id": "java",
                    "label": "java.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "BTW-0318",
                "lang": "en",
                "mainSpeaker": "Jef Verelst",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "When facing a technical migration of its application server infrastructure, Smals reviewed its business needs and ended up with Platform as a Service. We quickly saw that setting up a PaaS cannot be done by your Operations department alone. When you add the forces of Development, everybody wins. Now one year further, we can share with you some of the lessons learned and tell you how this became part of a bigger movement into a Belgian Government cloud.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Open to a Shift. Belgian e-government\u2019s journey to PaaS",
                "track": {
                    "id": "cloud",
                    "label": "cloud.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "EMF-0618",
                "lang": "en",
                "mainSpeaker": "Stephan Janssen",
                "otherSpeakers": [
                    "Lawrence Krauss"
                ],
                "privateMessage": "",
                "secondarySpeaker": "Mark Reinhold",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "The opening keynotes on Wednesday morning.",
                "talkType": {
                    "id": "key",
                    "label": "key.label"
                },
                "title": "Opening Keynotes",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "LAT-3571",
                "lang": "en",
                "mainSpeaker": "Stephan Janssen",
                "otherSpeakers": [
                    "Mark Reinhold"
                ],
                "privateMessage": "",
                "secondarySpeaker": "Lawrence Krauss",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "The Wednesday morning Devoxx opening keynotes.",
                "talkType": {
                    "id": "key",
                    "label": "key.label"
                },
                "title": "Opening Keynotes (Overflow 4)",
                "track": {
                    "id": "future",
                    "label": "future.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "DUO-4431",
                "lang": "en",
                "mainSpeaker": "Stephan Janssen",
                "otherSpeakers": [
                    "Mark Reinhold"
                ],
                "privateMessage": "",
                "secondarySpeaker": "Lawrence Krauss",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "The Devoxx opening keynotes.",
                "talkType": {
                    "id": "key",
                    "label": "key.label"
                },
                "title": "Opening Keynotes (Overflow 5)",
                "track": {
                    "id": "future",
                    "label": "future.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "XGO-0229",
                "lang": "en",
                "mainSpeaker": "Stephan Janssen",
                "otherSpeakers": [
                    "Mark Reinhold"
                ],
                "privateMessage": "",
                "secondarySpeaker": "Lawrence Krauss",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "The Wednesday morning Devoxx opening keynotes.",
                "talkType": {
                    "id": "key",
                    "label": "key.label"
                },
                "title": "Opening Keynotes (Overflow 9)",
                "track": {
                    "id": "future",
                    "label": "future.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "FTB-0095",
                "lang": "en",
                "mainSpeaker": "Luigi Dell'Aquila",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "*NoSQL claim was to use the right database model for the right domain. Bad news, in most cases a single database model is not enough!*\r\n\r\nIn last years NoSQL experienced a huge upward trend, offering new data models (Document, Graph, Key-Value...) to solve problems where old RDBMS failed. Now people who have chosen NoSQL as an architecture component, realize that a single data model (even when richer that relational), is not enough for average needs. \r\n\r\nLuigi Dell'Aquila, Director of Consulting at Orient Technologies Ltd (the company behind OrientDB, the first ever multi-model database), discusses the latest technology innovations and the market's demand for databases that combine more than one NoSQL model (ex. GraphDB, DocumentDB, Key/Value, Objects). \r\n\r\nIn this lecture, we will discuss why graph databases are at the heart of the multi-model revolution and why we're approaching the end of NoSQL's fragmented ecosystem where customers are forced to use multiple tools in their architectures. Benefits and compromises of this approach along with real world use cases will also be shared.\r\n",
                "talkType": {
                    "id": "tia",
                    "label": "tia.label"
                },
                "title": "OrientDB - the 2nd generation of (MultiModel) NoSQL",
                "track": {
                    "id": "cloud",
                    "label": "cloud.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "HSL-0085",
                "lang": "en",
                "mainSpeaker": "Patrick Curran",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "The Java Community Process (JCP) is key to the evolution of Java. This session discusses the transparency that enables participation in the JCP program and how to get involved through the Adopt-a-JSR program. You will also hear about some upcoming changes to the Java Specification Request (JSR) process through the JCP.next effort, JSR 358, and JSR 364 and learn how you can get involved. Come with your questions/suggestions, and leave with the motivation and information you need in order to become an active participant in advancing the Java platform.\r\n",
                "talkType": {
                    "id": "bof",
                    "label": "bof.label"
                },
                "title": "Participate in the Future of Java",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "LSL-7960",
                "lang": "en",
                "mainSpeaker": "Uwe Friedrichsen",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Production is where the money is made and where customers are satisfied - but only as long as our application is up, running and responsive. If our application is down or latent, it's worthless - and even worse, we loose money and reputation.\r\n\r\nThis is a real challenge in today's complex, distributed and highly interconnected application landscapes and availability can no longer be handled solely on infrastructure level but needs to be addressed on application level - and concepts like cloud computing or microservices make it even more challenging.\r\n\r\nThat's what resilience is about: how to design applications that they are highly available and responsive - even in the face of unexpected failure and load situations.\r\n\r\nIn this session you will learn a (small) resilience pattern language organized around some of the core principles of resilience, including many useful tips and tricks.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Patterns of resilience - the untold stories of robust software design",
                "track": {
                    "id": "archisec",
                    "label": "archisec.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "HQF-6761",
                "lang": "en",
                "mainSpeaker": "Simon Maple",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Recently RebelLabs performed a survey of over 1500 people, including developers, QA, operations, architects and more. In this survey we asked many interesting questions about how teams perform their performance testing, which tools they use, what stages they profile and many more. In this ignite session, we'll look through the results discovering how you can best position yourself to performance test your Java applications.",
                "talkType": {
                    "id": "ignite",
                    "label": "ignite.label"
                },
                "title": "Performance by Numbers",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "JZR-6763",
                "lang": "en",
                "mainSpeaker": "Jorge Morales Pou",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "I truly don't believe we engage in any activity expecting it to fail, and same goes for app development. I remember an old statistics that compared software projects to airplanes development, which would say that only 30% would take off without significative problems. I got scared when I first heard about it, but then I looked back on the projects I worked for, and even though the numbers weren't so bad, there was really a considerable amount of projects that failed and some miserably, but there is a deep relationship between failing and innovating.\r\nDevOps for me can be the main driver and accelerator of innovation. We all know that change is a constant, but so is failure. Having that, your development and operations is wrong, if changes and failures are seen as the result of bad decisions more than as result of a learning curve. But failing is not simple and on this ignite talk I\u2019ll cover the following considerations around DevOps, failure, and innovation:\r\nSee your project as an R&D project\r\nExpect failure more than you expect change\r\nThere's no way to run away from 'people process and tools'\r\nYou need a good enterprise architect\r\nPray for your boss",
                "talkType": {
                    "id": "ignite",
                    "label": "ignite.label"
                },
                "title": "Please Fail",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "TNU-5383",
                "lang": "en",
                "mainSpeaker": "Eyal LEZMY",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "You practice Gradle for a weeks and you are starting to master the way it works and you feel its great potential. Your small scripts are working well and you wonder now how to improve your build system, to make it cleaner.\r\nIt is time for you to add your own Gradle plugin to your tools.\r\n\r\nBy taking a simple example, we will see together how it is easy to take control of the build!\r\n\r\nHere are a few broached points during this talk:\r\n\r\n- Create a Gradle plugin and control it from your build.gradle\r\n- Mange the task graph\r\n- Test well your plugin \r\n- Manage the incremental builds\r\n- ...",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Plugin Gradle, take the control of the build!",
                "track": {
                    "id": "mobile",
                    "label": "mobile.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "QAW-9853",
                "lang": "en",
                "mainSpeaker": "Jeff Brown",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "The dynamic runtime nature of Groovy is one of the things that sets it apart from standard Java and makes it a fantastic language for building dynamic applications for the Java Platform. The metaprogramming capabilities offered by the language provide everything that an application development team needs to build systems that are far more capable than their all Java counterparts.  In addition to the runtime metaprogramming capabilities supported by the language there are a number of mechanisms that Groovy provides which allow you write code which participates in the compilation of Groovy code.  \r\n\r\nThis session will be a deep dive into much of Groovy's dynamic runtime and compile time metaprogramming capabilities including learning how Groovy's dynamic dispatch mechanism works and how to write code which participates in that, dynamically modifying class behavior at runtime, AST transformations for modifying class behavior at compile time, traits and other compile time techniques which open up a lot of powerful possibilities to application and library development teams.\r\n\r\n\r\n",
                "talkType": {
                    "id": "uni",
                    "label": "uni.label"
                },
                "title": "Powerful Metaprogramming Techniques With Groovy",
                "track": {
                    "id": "lang",
                    "label": "lang.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "EQF-2815",
                "lang": "en",
                "mainSpeaker": "Simon Basl\u00e9",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Laurent Doguin",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "You already have heard about RxJava but wish for a practical and concrete approach? You want to discover Functional Reactive Programming (FRP)? This workshop is made for you.\r\n\r\nWe'll discover ReactiveX by developing a client application that composes with multiple (not always reliable) services. We'll see which best practices to put in place so as to make it production-ready (retry, backpressure, exponential backoff...).\r\n\r\nThe application will eventually be connected to a NoSQL datastore, asynchronous and reactive itself.",
                "talkType": {
                    "id": "lab",
                    "label": "lab.label"
                },
                "title": "Practical RxJava",
                "track": {
                    "id": "java",
                    "label": "java.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "ZRF-0163",
                "lang": "en",
                "mainSpeaker": "Amy Nicholson",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "In 1922, physicist Niels Bohr said \u201cmaking predictions is very difficult, especially about the future\u201d. Making predictions is still difficult. That\u2019s why we delegate the task to computers. By looking for the tiniest, subtlest patterns embedded into masses of data from the past, we can derive the probability of something happening in the future. We give ourselves the best chance of getting it right. \r\n\r\nUnderstand how we can \u201cteach\u201d software to make predictions; to draw conclusions; to get to the very meaning of the messy, tangled mass of data that stands before us. That\u2019s the essence of machine learning. This is no longer a project locked within the bowels of Microsoft Research \u2013 it\u2019s morphed from impenetrable science into an everyday utility anybody can use on with only a modern web browser\r\n \r\nWe\u2019ll give you practical step-by-step guidance on how to extract learning and expose it as APIs to the Internet. Also how to incorporate them in to your own apps. We\u2019ll show a practical example of building an app that predicts flight delays and another that calls a sentiment analysis API. \r\n\r\nYou\u2019ll walk away from the session with enough knowledge to fire up your first machine learning project",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Predicting the Future with Machine Learning",
                "track": {
                    "id": "future",
                    "label": "future.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "BWI-7463",
                "lang": "en",
                "mainSpeaker": "Mark Reinhold",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Alan Bateman",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "The modularization of the Java SE Platform in JDK 9 will bring many benefits, but also many changes.  Existing code that uses only official Java SE Platform APIs and supported JDK-specific APIs should continue to work without change.  Code that uses certain deprecated features, however, or any JDK-internal APIs, is likely to break.  This session will show you how to prepare existing libraries and applications for JDK 9, and how to get old code working on JDK 9 even when you can't update it.\r\n",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Prepare for JDK 9!",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "KKL-3748",
                "lang": "en",
                "mainSpeaker": "Sam Newman",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Microservces are small services with independent lifecycles that work together. There is an underlying tension in that definition - how independent can you be when you have to be part of a whole? I've spent much of the last couple of years trying to understand how to find the right balance, and in this talk/tutorial I'll be presenting the core seven principles that I think represent what makes microservices tick. After a brief introduction of what microservices are and why they are important, we'll spend the bulk of the time looking at the principles themselves: * Modelled Around Business Domain * Culture Of Automation * Hide Implementation Details * Decentralize All The Things! * Deploy Independently * Isolate Failure * Highly Observable In terms of learning outcomes, I'd say that beginners will get a sense of what microservices are and what makes different, whereas more experienced practitioners will get an insight into practical advice into how to implement them.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Principles Of Microservices",
                "track": {
                    "id": "archisec",
                    "label": "archisec.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "JBW-3822",
                "lang": "en",
                "mainSpeaker": "Kris Verlaenen",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Even the simplest application ideas always end up requiring more development than you hoped for: maintaining long-lived state, interaction with other services or human actors performing some of the work, showing current status of ongoing requests, management and reporting, etc.  Business processes and rules allow you to externalize some of that logic and dynamically update it, but you don't want your business process management (BPM) system to get in your way either.\r\nAnd every application is different, so you want to be able to fully control every bit of it.\r\nUsing process-driven application development, you define your application logic in a (flexible) business process, but you also expect your BPM system to help you out with much more than that.  In this session we will show you live how to quickly get new web\r\napplications up and running by relying on jBPM to provide some of the UI (should you want to), or even to generate parts of your application for you (that you can customize later), so you can focus on what makes your application different.  jBPM uses the power of open source and it's flexible architecture to let you decide what you need: nothing\r\nmore, nothing less.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Process-driven applications: let BPM do (some of) your work",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                }
            },
            {
                "audienceLevel": "l3",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "VNG-7840",
                "lang": "en",
                "mainSpeaker": "Mark Reinhold",
                "otherSpeakers": [
                    "Alan Bateman"
                ],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "What is the difference between readability, observability, visibility, and accessibility in the Java Platform Module System?  What is the unnamed module, and why is it important?  What happened to the platform's built-in class loaders?  How can you load two different versions of a module at the same time?  This session will answer all these questions, and more!\r\n",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Project Jigsaw: Under the Hood",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "EDW-7208",
                "lang": "en",
                "mainSpeaker": "Vinicius Senger",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Yara Senger",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "This session discusses how you can use Intel RealSense in different IoT projects and contexts to provide amazing user experiences with gestures, text-to-speech, and voice and face recognition. You will see many different demos on a Raspberry Pi computer, an Intel Galileo board, and an Edison computer with sensors, robots, lights, and home-automation concepts. The demos include \r\n\u2022 Using face recognition for a home automation system \r\n\u2022 Controlling a remote robot by using gestures + a MQTT gateway + a Bluetooth device \r\n\u2022 Reading and speaking sensors\u2019 value \r\n\u2022 DIY security monitoring \r\n\u2022 Edison Pi laptop: a wooden laptop integrated with RealSense ",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Providing Eyes, Ears, and a Mouth to Your IoT Project",
                "track": {
                    "id": "future",
                    "label": "future.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "SYP-1149",
                "lang": "en",
                "mainSpeaker": "Lode Uytterschaut",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "How to bring innovation into a company, or push yourself over that final edge and start one of your own?",
                "talkType": {
                    "id": "start",
                    "label": "start.label"
                },
                "title": "Push it",
                "track": {
                    "id": "startup",
                    "label": "startup.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "TUT-5938",
                "lang": "en",
                "mainSpeaker": "Johan Janssen",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Willem Meints",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Last year we started a new Internet of Things project: The Internet of (Lego) Trains. In our normal jobs we use languages like Java and Scala to build applications for large organizations running on big servers. We wanted to find out if we could use the same languages and tools on IoT hardware. We also wanted to investigate whether or not (remote) actors could replace REST endpoints in our applications. We used Lego trains and Raspberry Pi\u2019s as a sample project.\r\n \r\nThe Lego trains are equipped with a Raspberry Pi, camera, wireless dongle, infrared transmitter, speaker, RFID reader and battery pack. Next to that we have automated switch tracks and camera's again with the help of Raspberry Pi's. We also build some lightning effects with LEDs controlled by Particle Photon\u2019s. On top of that we also automated a Lego ferris wheel.  To control the trains and other parts we built an remote actor based application with Scala, Akka, Akka HTTP and AngularJS.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "REST no more, use an actor (and Lego and Raspberry Pi\u2019s\u2026)",
                "track": {
                    "id": "lang",
                    "label": "lang.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "PEI-6962",
                "lang": "en",
                "mainSpeaker": "Mathieu ANCELIN",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "React is a JavaScript library by Facebook that aims to easily create complex UIs. Unlike other JavaScript libraries, no textual templates here, no pseudo-code, React allows you to use the full expressiveness of JavaScript. \r\n\r\nThe purpose of React is to provide a solution for building complex applications with data that change over time by writing a set of simple reusable and testable components.\r\n\r\nWe will see how to use React in your Web application and how to ... the full power of that wonderful library through technologies like ES6 and Web Components.",
                "talkType": {
                    "id": "tia",
                    "label": "tia.label"
                },
                "title": "React, a new way to create web components",
                "track": {
                    "id": "web",
                    "label": "web.label"
                }
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "OZT-9507",
                "lang": "en",
                "mainSpeaker": "Haoyuan Li",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Memory is the key to fast big data processing. This has been realized by many, and frameworks such as Spark and Shark already leverage memory performance. As data sets continue to grow, storage is increasingly becoming a critical bottleneck in many workloads.\r\nTo address this need, we have developed Tachyon, a memory-centric fault-tolerant distributed storage system, which enables reliable file sharing at memory-speed across cluster frameworks such as Apache Spark, MapReduce, and Apache Flink. The result of over three years of research and development, Tachyon achieves both memory-speed and fault tolerance.\r\nTachyon is Hadoop compatible. Existing Spark, MapReduce, Flink programs can run on top of it without any code changes. Tachyon is the default off-heap option in Spark. The project is open source and is already deployed at many companies in production. In addition, Tachyon has more than 100 contributors from over 30 institutions, including Yahoo, Tachyon Nexus, Redhat, Baidu, Intel, and IBM. The project is the storage layer of the Berkeley Data Analytics Stack (BDAS) and also part of the Fedora distribution.\r\n",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Real World Use Cases for Tachyon, a memory-centric distributed storage system",
                "track": {
                    "id": "cloud",
                    "label": "cloud.label"
                }
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "UEP-8897",
                "lang": "en",
                "mainSpeaker": "Ludovic Champenois",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Amanda Waite",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Microservices are a great model for developing modern applications. But microservice based architectures are more complicated than traditional monolithic apps and can come with a significant management overhead particularly when you need to maintain different environments for dev, test and production. This overhead either falls on your development team or to people you hire specifically to manage it. \r\n\r\nThis talk with multiple demos, looks at how to build, test and deploy container based microservice architectures without having to worry about managing the platform on which they run, thus freeing up your developers to do what they do best, writing application code.\r\n\r\nWe'll look at new and enhanced features of Google App Engine and walk through the staged deployment of both a simple application and a more complicated microservices based architecture. We'll also look at how App Engine has evolved from it's original sandboxed runtime environment to what it is today, a next generation platform for building and deploying modern day applications.\r\n",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Redefining PaaS: Managed container based microservices on Google App Engine",
                "track": {
                    "id": "cloud",
                    "label": "cloud.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "LZN-7807",
                "lang": "en",
                "mainSpeaker": "Arun Gupta",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Microservices allow to decompose a monolithic application into cohesive and multiple decoupled services. Each service is running in its own process and communicate using lightweight mechanisms, such as HTTP API. These services are built around business capabilities or functional decomposition. Microservice also enables true polyglot architecture \u2013 both in terms of language and data. It truly allows you to employ the right tool for the right job. Each service is independently deployable and lends very well to fully automated deployment machinery.\r\n\r\nCan you take an existing Java EE application and decompose it into microservices? What tools are required to enable CI/CD? How does it enable polyglot? What are different design patterns for microservices? What options are available for Service Discovery, distributed logging,  load balancing? What tools do you need to manage such services? Is the complexity being pushed around from service implementation to orchestration?\r\n\r\nThis session will explain how to refactor an existing monolith into microservices and the complexities and benefits it introduces.",
                "talkType": {
                    "id": "uni",
                    "label": "uni.label"
                },
                "title": "Refactor your Java EE application using Microservices and Containers",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l3",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "WYC-4341",
                "lang": "en",
                "mainSpeaker": "St\u00e9phane Nicolas",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "On Android, many applications rely on the Java Reflection API. For instance, all data driven apps get data from the network, save data in your local cache files / databases. And most of the libraries used to simplify those tasks will use reflection in their core. \r\n\r\nUnfortunately, Reflection is slow on Android due to limitations of Dalvik and Art. The usual workaround is to write annotation processors and replace Reflection by generated code. But, it comes with a price : all the robust and mature libs from Java can't be reused and must be rewritten, often in a degraded, simpler version. And the annotation processor API is quite tricky, leaving this work to a handful of expert coders.\r\n\r\nIn this talk, we will demonstrate a new approach using the Reflection No Reflection (RN\u042f). This new technology provides a much faster access to reflection data, while maintaining compatibility with the Reflection API. Using this technique, any library can swap out use of the Reflection API with this interface-compatible implementation to achieve greater performance.\r\n",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Reflection No Reflection : Boosting performance on Android by bypassing Reflection API",
                "track": {
                    "id": "mobile",
                    "label": "mobile.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "MCC-2062",
                "lang": "en",
                "mainSpeaker": "Renato Cavalcanti",
                "otherSpeakers": [
                    "Eric Loots"
                ],
                "privateMessage": "",
                "secondarySpeaker": "Luc Duponcheel",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Come and exchange on all things about Scala and its community: organizing and animating a vibrant local user group, supporting and promoting adoption in the enterprise and any other topic around this exciting language.\r\n\r\nThe Scala Community BoF is organised by BeScala, the Belgian Scala User Group.",
                "talkType": {
                    "id": "bof",
                    "label": "bof.label"
                },
                "title": "Scala Community BoF",
                "track": {
                    "id": "lang",
                    "label": "lang.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "IFQ-2167",
                "lang": "en",
                "mainSpeaker": "Bert Swinnen",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Steven Trescinski",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "After provisioning tools like Puppet and Chef took the Java ecosystem by storm and with the emergence of cloud and PaaS offerings the last couple of years, everybody seems to be talking about containerisation nowadays. With the rise of Docker, an entire ecosystem is literally emerging and together with it opportunities are there for the taking. With this technology candy store in place, suddenly truly scalable applications no longer seem like rocket science to mere mortals like us Devoxxians.\r\n\r\nSounds easy enough, right? Wrong! The current landscape is a real quagmire of technology and it\u2019s easy to get stuck in there. With dozens of vendors competing in this space it can be difficult to lay the puzzle correctly and make it tick like a Swiss watch. After scouting this landscape for weeks I did what every developer does best: team up with the greatest DevOps guy you know of, write some damn code and grind it out. \r\n",
                "talkType": {
                    "id": "bof",
                    "label": "bof.label"
                },
                "title": "Scaling the cube, from Monolith to Micro-service mayhem. ",
                "track": {
                    "id": "archisec",
                    "label": "archisec.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "LLH-2414",
                "lang": "en",
                "mainSpeaker": "Philipp Krenn",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Do you have something to confess? Or are you still in denial \u2014 knowing that you're doing something wrong, but you cannot say for sure what it is?\r\nIn this talk, we'll go through our Java deployment sins and how to avoid them:\r\n\r\n* Lust: Of course I'm using this alpha version and structure our whole deployment process around it!\r\n* Gluttony: I absolutely need this monolithic, 500MB archive file \u2014 what do you mean with microservice?\r\n* Greed: I'm not kidding when I'm saying that this app will only work with JBoss AS 6.0.\r\n* Sloth: Continuous Deployment or Delivery \u2014 who would need that?!\r\n* Wrath: Graceful error handling, reporting, and monitoring are for the faint of heart!\r\n* Envy: Why would I rely on an external system to do the whole configuration for me, when I can lovingly handcraft it all myself? Artisanal projects FTW!\r\n* Pride: Checking our app's status after the deployment? That's only for people who break stuff.\r\n\r\nGradle, Spring Boot, Jenkins, and AWS to the rescue!",
                "talkType": {
                    "id": "bof",
                    "label": "bof.label"
                },
                "title": "Se7en deadly sins of deployments",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "PIG-1969",
                "lang": "en",
                "mainSpeaker": "Alex Soto",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Everyone is talking about the microservices architecture, and how Docker can help DevOps deploy the services. Docker is often mentioned in conjunction with cluster managers like Kubernates, Marathon or Fleet. But, what about the secrets? The current trend increase the number of secrets required to run our services. This place a new level of maintenance on our security teams. How can we share and manage the secrets(certificates, passwords, keys) for our services in this kind of dynamic scenario; where instances are started automatically, where there are multiple instances of the same services for scalability reasons? Are you keeping up?\r\n\r\nCome to this session to see how you can manage your secrets with Vault; and make security a first class citizen in the development process.",
                "talkType": {
                    "id": "tia",
                    "label": "tia.label"
                },
                "title": "Secrets are secrets. Please maintain them as secrets.",
                "track": {
                    "id": "archisec",
                    "label": "archisec.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "YIO-3892",
                "lang": "en",
                "mainSpeaker": "Andrei Solntsev",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Who said testing is boring?\r\nWho said testing is only for testers?\r\n\r\nNope!\r\n\r\nMeet the Selenide - an open-source library for writing concise and stable UI Tests in Java. Now you can be sure that your web application works as expected.",
                "talkType": {
                    "id": "ignite",
                    "label": "ignite.label"
                },
                "title": "Selenide: concise UI Tests in Java.",
                "track": {
                    "id": "java",
                    "label": "java.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "QBD-3461",
                "lang": "en",
                "mainSpeaker": "Andrei Solntsev",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Automated testing is a must nowadays.\r\n\r\nNevertheless developers often skip writing automated UI tests because it's tricky and boring. But now we have a simple and powerful tool that makes writing UI tests really effective.\r\n\r\nSelenide is an open-source library for writing concise and stable UI tests in Java. With Selenide you can forget all these timing issues, ajax and browser whims. You can concentrate on business logic. \r\n\r\nDuring my session I will demonstrate how you can write readable and stable tests that assure your application works after any changes and serve as an executable documentation. I will see it's really easy.",
                "talkType": {
                    "id": "tia",
                    "label": "tia.label"
                },
                "title": "Selenide: concise UI Tests in Java. From developers for developers.",
                "track": {
                    "id": "java",
                    "label": "java.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d3",
                "event": "Devoxx Belgium 2015",
                "id": "CAE-1376",
                "lang": "en",
                "mainSpeaker": "Alex Soto",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Learn how to write clean, clear, maintainable automated acceptance tests for both web applications and web services using Serenity BDD (http://serenity-bdd.info). Serenity BDD is an open source library that helps you write better, more effective automated acceptance tests, and use these acceptance tests to produce world-class test reports and living documentation.",
                "talkType": {
                    "id": "tia",
                    "label": "tia.label"
                },
                "title": "Serenity BDD - from executable specifications to living documentation",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "QMS-8186",
                "lang": "en",
                "mainSpeaker": "Maurice Naftalin",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Kirk Pepperdine",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "For Java programmers, iterating over a collection is the time-honored way of processing data. Now, from Java 8 onwards, we will instead be writing stream programs\u2014more concise, more expressive, and more maintainable. But how fast will they be? To understand the factors that govern stream performance, we need to look at the implementation of their different parts: beginning in a Spliterator, ending in a Collector, and\u2014for parallel streams\u2014processing in the Fork/Join framework. In this talk, we'll use measurements of these different stages to analyse the performance of some practical programs. The result will be guidelines for getting the best performance from Java 8 streams and for predicting when it is worthwhile to go parallel.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Shooting the Rapids: Maximizing the Performance of Java 8 Streams",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "KDU-8916",
                "lang": "en",
                "mainSpeaker": "Philipp Krenn",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Showdown of the Asserts\r\n\r\nThis talk is based on heated discussions about the syntax of asserts. Do you like the good old `assertNotEquals(id, c.getId())` or do you prefer something fancier like `assertThat(id, is(not(equalTo(c.getId()))))`?\r\nWe will take a quick look at the differences between asserts in JUnit, TestNG, Hamcrest, fest, AssertJ, and Spock. This topic is at least as important as Vim vs Emacs and tabs vs spaces!",
                "talkType": {
                    "id": "ignite",
                    "label": "ignite.label"
                },
                "title": "Showdown of the Asserts",
                "track": {
                    "id": "java",
                    "label": "java.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "SVY-0282",
                "lang": "en",
                "mainSpeaker": "Nick De Cooman",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "After growing into a world of beacons and BLE applications, Sigfox may be the next big thing in connecting the things around us. Backed by a 115M investments of Samsung, this French-based company is building a low cost cellular network for linking anything \u2014small or big\u2014 to the internet. The network is already available in large parts of Europe, and coverage in Belgium is due for late 2015! \r\n\r\nWhat makes Sigfox ideally for connecting things is that data packages can only be 12 bytes in size, transmitting at only 100 bits per second. Prices are therefore significantly cheaper than traditional cellular data traffic, not to mention the low power consumption. Perfect for many applications!\r\n\r\nEven if you have no experience in communication protocols, come learn how Sigfox requires only very small battery and cheap hardware, allowing things like basic alarm systems, asset trackers, and electricity meters to connect to the internet. We\u2019ll see how the network works from a technical point of view (no radio transmission terminology, promised), how to make use of it and how it compares to other communication solutions. ",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "Sigfox \u2014 A cellular network, just for Things",
                "track": {
                    "id": "future",
                    "label": "future.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "HXP-6740",
                "lang": "en",
                "mainSpeaker": "Christopher Batey",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Are you developing applications that communicate over a network? Of course you are! This talk will take you through all the ways you can build fault-tolerant applications and how, once you get your team in the mindset that everything will eventually fail, dealing with the failures gracefully is no more work than building fragile applications. \r\n\r\nWith supporting slides, I'll cover the theory and motivation behind moving to a more distributed architecture and then go through the pitfalls and the strategies for improving fault-tolerance, backed up with real examples from the system I built at Sky television.\r\n\r\nAfter an introduction the talk will be split into 6 sections/principles/lessons learned from the field:\r\n\r\n* Implementing SLAs + timeouts in a networked environment\r\n* Proactively avoiding work: bound your queues\r\n* Failing gracefully + don\u2019t cascade failures\r\n* Circuit breaking unreliable dependencies\r\n* Kill switching unreliable dependencies\r\n* Know it is your fault: monitoring a micro service architecture",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Six principles for building fault tolerant microservices on the JVM",
                "track": {
                    "id": "cloud",
                    "label": "cloud.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "DMA-9497",
                "lang": "en",
                "mainSpeaker": "Sebastien Arbogast",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Said Eloudrhiri",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "This presentation will quickly go over the 3 main smartwatch platforms on the market, namely Pebble, Android Wear and Apple Watch. We will explain the characteristics of each platform, the usage scenarios it supports, the architecture of an app, show the language and the tools that are available to develop apps, describe the development lifecycle and illustrate with code samples (no live-coding). We will demonstrate all that based on a common app developed for the three platforms.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Smartwatch Landscape",
                "track": {
                    "id": "mobile",
                    "label": "mobile.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "ZOD-7008",
                "lang": "en",
                "mainSpeaker": "Baruch Sadogursky",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Remember the excitement you felt when pulling a box off the shelf complete with CD and user guides? Remember your dismay when you wanted to reinstall and couldn\u2019t find your CD? Remember software vendors sweating over the logistics of distributing physical products? Well, that\u2019s all in the past. Today we just click a link and download software from our vendor\u2019s cloud storage. Sounds great, but our vendor is still unhappy. He wants to know which versions were downloaded, by whom, when and from where. A smart software distribution platform that is structured for distribution, fully understanding versions and metadata, can provide you with that critical information which you can use in your sales and marketing efforts. You can have that today.",
                "talkType": {
                    "id": "bof",
                    "label": "bof.label"
                },
                "title": "Software Distribution: Past, Present and Future",
                "track": {
                    "id": "cloud",
                    "label": "cloud.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "KVI-0164",
                "lang": "en",
                "mainSpeaker": "Simon Brown",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Over the past few years, I\u2019ve been distilling software architecture down to its essence, helping organisations adopt a lightweight style of software architecture that complements agile approaches. This includes doing \"just enough\" up front design to understand the significant structural elements of the software, some lightweight sketches to communicate that vision to the team, identifying the highest priority risks and mitigating them with concrete experiments. Software architecture is inherently about technical leadership, stacking the odds of success in your favour and ensuring that everybody is heading in the same direction.\r\n\r\nBut it\u2019s 2015 and, with so much technology at our disposal, we\u2019re still manually drawing software architecture diagrams in tools like Microsoft Visio. Furthermore, these diagrams often don\u2019t reflect the implementation in code, and vice versa. This session will look at why this happens and how to resolve the conflict between software architecture and code through the use of architecturally-evident coding styles and the representation of software architecture models as code.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Software architecture as code",
                "track": {
                    "id": "archisec",
                    "label": "archisec.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "QUK-9153",
                "lang": "en",
                "mainSpeaker": "Brian Clozel",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "St\u00e9phane Nicoll",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Only 2 years after its inception, Spring Boot is already very popular amongst Spring developers, but also newcomers to the JVM. Boot is offering a new, comprehensive way of developing web applications. This session will cover the basics but also more advanced and new features of the project for the web tier.\r\n\r\nFirst we\u2019ll go over the basics of a REST service powered by Boot. We\u2019ll then gradually add more features that are typical to modern web applications. Along the way, we\u2019ll see how Boot is helping us with front-end resources, security, error customization, template engines, embedded container configuration and devops features.\r\n\r\nJoin this session to learn how Boot helps you writing modern web applications.\r\n",
                "talkType": {
                    "id": "uni",
                    "label": "uni.label"
                },
                "title": "Spring Boot for the web tier",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l3",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "RRA-3443",
                "lang": "en",
                "mainSpeaker": "Rachel Andrew",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Since the early days of the web, designers have been trying to lay out web pages using grid systems. Likewise, almost every CSS framework attempts to implement some kind of grid system, using floats and often leaning on preprocessors. The CSS Grid Layout module brings us a native CSS Grid system for the first time\u2014a grid system that does not rely on document source order, and can create complex layouts which are easily redefined with media queries. Following along with practical examples, you\u2019ll learn how Grid works, and how it can be used to implement modern layouts and responsive designs.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Start using CSS Grid Layout",
                "track": {
                    "id": "web",
                    "label": "web.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "YHJ-1430",
                "lang": "en",
                "mainSpeaker": "Tom Michiels",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "In this presentation I will present the history of current enterprise architecture and will explain how to build future architectures based on the concept of a stream. A stream is an ordered collection of events. By using streams as a foundation building block to encapsulate data we are going to be able to build architectures that are more performant and can rapidly adapt to changing business needs. Opening up these abilities is going to be a key in the future. We will use components like Apache Kafka, Spark, Cassandra and TypeSafe AKKA to lay the foundations on which we will build tomorrow's applications. A functional programming language, Scala, is going to be the glue. ",
                "talkType": {
                    "id": "bof",
                    "label": "bof.label"
                },
                "title": "Stream Based Architecture",
                "track": {
                    "id": "archisec",
                    "label": "archisec.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "ZWF-9355",
                "lang": "en",
                "mainSpeaker": "Bert Jan Schrijver",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "You're probably familiar with the buzz around Docker and other popular container solutions. Advocates for these tools make it seem like using containers is the only way to go nowadays. So should we throw away everything we learned about Continuous Delivery in the past 10 years for a hype that's been around for just a few years? Of course not. This session shares experiences with a practical approach to Continuous Delivery and DevOps in 10 clear, down-to-earth steps. The result is a setup that is scalable, resilient and maintainable, yet without the use of popular container solutions like Docker or Mesos. Key concepts are automated provisioning and deployments, DevOps, continuous testing, microservices, open source, cloud services and automated scaling.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Swimming upstream in the container revolution: Containerless Continuous Delivery",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "JIF-4133",
                "lang": "en",
                "mainSpeaker": "Hadi Hariri",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Abstractions are an intrinsic part of software. We build them to try and raise the level at which we need to write code and not have to deal with the nitty gritty details. But abstractions also have a downside: lack of concern about how things work can prove problematic. We can make wrong decisions and use abstractions counterproductively. With widespread adoption of single page applications that use both HTTP and at times web sockets or other frameworks built on top of sockets, it is good to understand what goes on under the cover. In this talk we\u2019re going to go back to basic, and dive into sockets, covering TCP, UDP, creating custom protocols et al. and see how sometimes something that would seem complicated can easily be addressed simply. It will be a trip down memory lane to recall important concepts that might have been forgotten.   ",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "TCP? UDP? Que? \u2013 Fundamentals that were abstracted away from us",
                "track": {
                    "id": "web",
                    "label": "web.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "AYH-2795",
                "lang": "en",
                "mainSpeaker": "Chris Dennis",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Terracotta open sourced it\u2019s core offheap library earlier this year. Despite being a Terracotta project, it:\r\n\r\n* doesn\u2019t use byte code engineering,\r\n* doesn\u2019t require running a modified JVM.\r\n\r\nDespite being an offheap library, it:\r\n\r\n* doesn\u2019t use non-standard APIs or JNI,\r\n* doesn\u2019t do reflection on core JDK types.\r\n\r\nIt does however:\r\n\r\n* provide a library of maps and caches with significantly sub-linear per key heap overheads,\r\n* scale up to 6TB in a single node and 1TB in a single map.\r\n\r\nWhat follows will be an explanation of how well understood CS concepts from managed and unmanaged programing environments combine to produce a stable, reliable, and useful library. There is no secret sauce here, and the source is no longer secret.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Terracotta\u2019s OffHeap Explained",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "GAD-8348",
                "lang": "en",
                "mainSpeaker": "Christoph Deppisch",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Citrus is a powerful Open Source integration testing tool for automated service API tests. The framework concentrates on the interfaces to boundary applications and services with the ability to exchange messages on client and server side with different message transports (Http, JMS, TCP/IP, FTP, ...) and formats (XML, JSON). The primary goal is an automated integration test of all service APIs where real message communication is sent over the wire. The framework helps to manage complex test scenarios with multiple services interacting with each other. Citrus integrates with frameworks like Apache Camel, Arquillian, Kubernetes and Docker in order to provide automated integration testing of Microservice applications. The tools in action session gives a brief introduction to the Citrus framework and shows code samples for a complete integration test scenario in a Microservices environment.",
                "talkType": {
                    "id": "tia",
                    "label": "tia.label"
                },
                "title": "Testing Microservices with a Citrus twist",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "UJY-8307",
                "lang": "en",
                "mainSpeaker": "Simon Maple",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "This session will look at the fun, fear and frollocks we have been through in created the world's first Virtual Java User Group. Being a JUG leader always comes with it's difficulties as many of us know, but with the vJUG we introduce the uncertainty of the internetz! We'll look at what we've achieved and where we failed and got back up again.",
                "talkType": {
                    "id": "ignite",
                    "label": "ignite.label"
                },
                "title": "The Adventures of running the vJUG!",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "NQU-9652",
                "lang": "en",
                "mainSpeaker": "Tasha Carl",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "When Bitcoin appeared first in 2008, the reactions were rather cautious. This has changed! We experienced everything between Bitcoin rags-to-riches and digital bank robberies costing millions to victims. Bitcoin can be used to buy \"bad things\" or standard PCs. \r\n\r\nHowever... below the visible surface, there also appeared something really genius: The Blockchain.\r\n\r\nThe Blockchain is the fully-distributed database controlling Bitcoin transactions, the digital ledger. But Bitcoin is just scraping the surface of what this new technology can do.\r\n\r\nProjects like Ethereum and frameworks like Eris are bringing the Blockchain technology to the masses (of developers). Use cases like secure DNS, ownership and identity certifications or micro payments are popping up, taking advantage of the pure decentralization and high security. \r\n\r\nThis BOF of about the Blockchain technology. We start with a short introduction on how the Blockchain concept works. Next, we will sit together and brainstorm on possible applications in the IT world - keeping the application fields of the DEVOXX in focus: client/server communication, web application security, identity management, mobile and enterprise world etc.",
                "talkType": {
                    "id": "bof",
                    "label": "bof.label"
                },
                "title": "The Blockchain BOF",
                "track": {
                    "id": "archisec",
                    "label": "archisec.label"
                }
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "LWD-4328",
                "lang": "en",
                "mainSpeaker": "Alex Soto",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Aslak Knutsen",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "With microservices, polyglot and devops on the rise, where are we at with testing? Does it bring more complexity and makes our testing effort harder or in maybe in contrary it actually helps us write better tests easier?\r\n\r\nIn this session we will be exploring not only how we can do our testing in this new world, but also how the new world can help us test better.\r\n\r\nWe will take a close look at topics varying from NodeJS, DynJS, VertX, Ceylon or Ruby orchestrated microservices through system scale testing with different configurations to database migration and regression testing. All are within a reach.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "The Borg is docking your system; testing is futile! Or is it?",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "QLE-9614",
                "lang": "en",
                "mainSpeaker": "Stephen Chin",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Why does all the food taste like cold sandwiches?  Where are the power outlets?  How do I get a free badge?  Who has the best Tchotchkes?  What T-Shirt am I going to wear today?  I admit it, I am a conference bum.",
                "talkType": {
                    "id": "ignite",
                    "label": "ignite.label"
                },
                "title": "The Conference Bum",
                "track": {
                    "id": "startup",
                    "label": "startup.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "NCE-2451",
                "lang": "en",
                "mainSpeaker": "Andrew Tanenbaum",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Most computer users nowadays are nontechnical people who have  a mental model of what they expect from a computer based on their experience with TV sets and stereos: you buy it, plug it in, and it works perfectly for the next 10 years. Computers aren't like that, which leads to frustration.\r\n\r\nPart of the problem is the operating system, which is often millions of lines of kernel code, each of which can potentially bring the system down. As long as we maintain the current structure of the operating system as a huge single monolithic program full of foreign code (device drivers) and running in kernel mode, the situation will not improve.\r\n\r\nIn an attempt to provide better reliability and security, we have created a new multiserver operating system,  MINIX 3, with only 15,000 lines in kernel and the rest of the operating system split up into small components each running as a separate user-mode processes. \r\nIt is available for the x86 and ARM for embedded systems. The talk will discuss the design of the system and some of unique aspects, such as live update--the ability to replace the operating system with a new version while it is running without affecting running applications",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "The Design of a Reliable and Secure Operating System",
                "track": {
                    "id": "archisec",
                    "label": "archisec.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "PPU-4757",
                "lang": "en",
                "mainSpeaker": "Werner Keil",
                "otherSpeakers": [
                    "Ot\u00e1vio Santana"
                ],
                "privateMessage": "",
                "secondarySpeaker": "Mohamed Taman",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Come to meet JSR 363 - Units of Measurement! It's the first JSR targeted to help you work with IoT devices, tackling sensors and measurements in a standard way.\r\nWe all know that when representing a temperature, for example, we normally have it as a float. But, is this float in Celsius? Fahrenheit? Kelvin? This is one of the problems this JSR wants to solve: have all \"real world\" value and unit data represented in a standard way. This JSR is also very suitable for scientific applications, where data representation, conversion and formatting is very important. \r\n\r\nIn this presentation, we'll see how both developers and platform providers can leverage this JSR, coding for a smart home or smart gas pump that reports its values in a standard way. As well as other use cases and actual embedded devices like Raspberry Pi or Intel Edison.\r\n\r\nAnd this JSR is still in the making. Be first hand witness of the JSR 363 Public Draft (due around Nov) and learn how YOU can get involved and help Java grow in the IoT space! We'll explore how JSRs work and how you can get involved in the JCP and work with this and other JSRs.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "The First IoT JSR: Units of Measurement ",
                "track": {
                    "id": "future",
                    "label": "future.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "LZT-8817",
                "lang": "en",
                "mainSpeaker": "Roy van Rijn",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "I'm a practitioner of arguably the hardest sport in the world: Joggling. This is a combination of jogging (running) and juggling (throwing stuff in the air). Before you laugh, the current world record of fastest joggled marathon (!) is 2:50:09!\r\n\r\nDuring this 5 min Ignite session I'll tell you all about this crazy sport, why you should do it too as programmer and I'll even teach you how to start joggling.",
                "talkType": {
                    "id": "ignite",
                    "label": "ignite.label"
                },
                "title": "The Java Joggler",
                "track": {
                    "id": "future",
                    "label": "future.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d4",
                "event": "Devoxx Belgium 2015",
                "id": "HWM-5035",
                "lang": "en",
                "mainSpeaker": "St\u00e9phane Nicoll",
                "otherSpeakers": [
                    "Brian Clozel",
                    "Josh Long",
                    "Juergen Hoeller",
                    "Oliver Gierke"
                ],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "A BOF for all fans of Spring to talk about the latest and greatest tech, including Spring Boot, the convention-over-configuration centric framework built on top of Spring.",
                "talkType": {
                    "id": "bof",
                    "label": "bof.label"
                },
                "title": "The Spring BOF",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                }
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "WJI-8161",
                "lang": "en",
                "mainSpeaker": "Juergen Hoeller",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "The Spring Framework is well-known to have a tight roadmap with frequent feature releases. Our rough planning for 2016 is already complete, so here is a chance for a sneak peek towards 4.3 and a brief outlook onto 5.0. Let's talk about JDK 9, a JSR-330 revision, a comprehensive HTTP/2 story, and our way of planning to begin with!",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "The Spring Framework Roadmap",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "OLA-9851",
                "lang": "en",
                "mainSpeaker": "Hubert Sablonni\u00e8re",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "This year a new Star Wars episode will be released in december. It's time to watch again the old episodes and push the youngest to watch them for the first time!!\r\n\r\nBut the question is : Should we watch them in the release order or in the episode order?\r\n\r\nThe answer is simple : neither!\r\nWe should watch them in the \"Machete Order\"!!!",
                "talkType": {
                    "id": "ignite",
                    "label": "ignite.label"
                },
                "title": "The Star Wars Machete Order",
                "track": {
                    "id": "future",
                    "label": "future.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "WFY-8474",
                "lang": "en",
                "mainSpeaker": "Joe Kutner",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Twelve Factor apps are built for agility and rapid deployment. They enable continuous delivery and reduce the time and cost for new developers to join a project. At the same time, they are architected to exploit the principles of modern cloud platforms while permitting maximum portability between them. Finally, they can scale up without significant changes to tooling, architecture or development practices. \r\n\r\nIn this talk, you\u2019ll learn the principles and best practices espoused by the Twelve Factor app. We\u2019ll discuss how to structure your code, manage dependencies, store configuration, run admin tasks, capture log files, and more. You\u2019ll learn how modern Java deployments can benefit from adopting these principles, and why they fit nicely within the cloud.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "The Twelve Factor app: Best Practices for Java Deployment",
                "track": {
                    "id": "cloud",
                    "label": "cloud.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "WCK-3360",
                "lang": "en",
                "mainSpeaker": "Michael Heinrichs",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Most Java applications require parts of the UI to be implemented in JavaScript. But hardly anybody really wants to use it, in particular Java developers would rather avoid it by all means.\r\n\r\nLuckily a whole range of alternatives exists from which one can choose. In this talk we compare the most successful ones, TypeScript and CoffeeScript, with the most promising one: EcmaScript 2015, which is the new JavaScript standard that was just released.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "The UI Scripting Language Shootout: EcmaScript 2015 vs. TypeScript vs. CoffeeScript",
                "track": {
                    "id": "web",
                    "label": "web.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "IZN-4421",
                "lang": "en",
                "mainSpeaker": "Guillaume Laforge",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "What should a good REST API look like?\r\nShould you use verbs or nouns in your resource paths?\r\nHow do you handle versioning of APIs?\r\nHow to deal with partial responses and pagination?\r\nWhich status codes should I make use of?\r\nWhat about sorting, filtering, and searching?\r\nHave you thought about content negotiation, cross-domain access, hypermedia, and authentication?\r\n\r\nGuillaume will got through all these topics, offering advice on the best approaches to those questions, and opening up the debate on the various options available, so as to make your Web API at REST, as clean and elegant as possible.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "The never-ending REST API design debate",
                "track": {
                    "id": "web",
                    "label": "web.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "HCT-6808",
                "lang": "en",
                "mainSpeaker": "Bert Jan Schrijver",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "The Dutch Java User Group (NLJUG) has a national reach throughout the Netherlands and is best known for its J-Fall conference, the leading event of its kind for the Dutch-speaking Java community. What's less known outside the Netherlands is that NLJUG, in contrast to the general movement from printed to online media, also publishes its own, printed magazine. This magazine is created by developers for developers and features relevant Java-related content for the Dutch Java community. This session provides a sneak peek behind the scenes of running a magazine for a Java User Group and shares experiences with publishing a community-driven technology magazine.",
                "talkType": {
                    "id": "ignite",
                    "label": "ignite.label"
                },
                "title": "The power of paper: publishing a printed magazine for a Java User Group",
                "track": {
                    "id": "java",
                    "label": "java.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "UEQ-6427",
                "lang": "en",
                "mainSpeaker": "Daniel Fern\u00e1ndez",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Web application projects often have to deal with a mismatch between web design and software development.  No matter whether these roles are taken by different teams, different people or simply different personalities of the same developer, there has always been conflict between the tools that bring data to the view layer and those in charge of representing such data in the most useful and visually appealing way.\r\n\r\n**Thymeleaf** is a modern Java server-side *template engine* that aims at bringing together both worlds by allowing templates to be developed in a designer-friendly way, with maximum respect to HTML markup and minimum interference of template logic in design or prototyping artifacts.\r\n \r\nAs a plus, Thymeleaf's philosophy also allows the easy integration of client-side technologies like JavaScript libraries/frameworks so that developers can benefit from the best tools on the server and browser sides at the same time.\r\n\r\nThis talk will guide you through the capabilities of Thymeleaf and prepare you to start developing Thymeleaf templates, as well as show the new exciting features in **Thymeleaf 3** that will make those already familiar with the project even more productive.",
                "talkType": {
                    "id": "tia",
                    "label": "tia.label"
                },
                "title": "Thymeleaf: bridging the gap between designers and devs with server-side templates",
                "track": {
                    "id": "web",
                    "label": "web.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "SYV-6012",
                "lang": "en",
                "mainSpeaker": "Sebastiano Poggi",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "This talk will tour one of the most understated resources in the Android developer arsenal: the support tools.\r\n\r\nLearn how to enrich your methods and classes using annotations, so that Lint and Android Studio will be able to spot errors for you. Or use IntelliJ annotations to define contracts, and let the IDE warn you of potential issues before you even run your code once. Take advantage of the tools namespace to bend even the most cryptic XML resource to your will.",
                "talkType": {
                    "id": "tia",
                    "label": "tia.label"
                },
                "title": "Tools of the Trade",
                "track": {
                    "id": "mobile",
                    "label": "mobile.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "VSO-1165",
                "lang": "en",
                "mainSpeaker": "Andy Petrella",
                "otherSpeakers": [
                    "Xavier Tordoir"
                ],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Nowadays, Data Science is buzzing all over the place.\r\n\r\nBut what is a, so-called, Data Scientist?\r\n\r\nSome will argue that a Data Scientist is a person able to report and present insights in a data set.\r\nOthers will say that a Data Scientist can handle a high throughput of values and expose them in services.\r\nYet another definition includes the capacity to create meaningful visualizations on the data.\r\n\r\nHowever, we enter an age where velocity is a key. Not only the velocity of your data is high, but the time to market is shortened. Hence, the time separating the moment you receive a set of data and the time you\u2019ll be able to deliver added value is crucial.\r\n\r\nIn this talk, we\u2019ll review the legacy Data Science methodologies, what it meant in terms of delivered work and results.\r\n\r\nAfterwards, we\u2019ll slightly move towards different concepts, techniques and tools that Data Scientists will have to learn and appropriate in order to accomplish their tasks in the age of Big Data.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Towards a rebirth of Data Science",
                "track": {
                    "id": "future",
                    "label": "future.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "MXQ-1944",
                "lang": "en",
                "mainSpeaker": "Alex Soto",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Mite Mitreski",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "One of the additions of Java EE 7 was the JSON-P specification for processing JSON documents. But JSON-P spec is moving forward and for Java EE 8 it will come with a lot of new features like support for JSON Pointer (RFC6901), JSON Patch (RFC6902) or JSON Merge Patch (RFC7386). But also improvements on performance, Java 8 integration and how to process big JSON data.\r\n\r\nThe first part of this session presents the JSON Processing API that comes with Java EE 7 to understand the basis for improvements of next version. The second part of the session presents the updates that are coming on the Java API for JSON Processing that they will be added inside Java EE 8.  \r\n",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Updates to the Java API for JSON Processing for Java EE 8",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "TQO-2065",
                "lang": "en",
                "mainSpeaker": "Clement Escoffier",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Paulo Lopes",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Vert.x 3 is a toolkit to create reactive applications on the Java Virtual Machine. Vert.x 3 takes the JVM to new levels of reactive awesomeness: it lets you build scalable applications transparently distributed in Java, JavaScript, Ruby and Groovy. And, you don\u2019t have to choose a single language, but mix them!\r\n\r\nThis workshop is a hands-on introduction to the development of micro-service applications developed with vert.x. After a primer on vert.x, the attendees will develop an application deployed in a set of interconnected docker containers in the language of their choice.",
                "talkType": {
                    "id": "lab",
                    "label": "lab.label"
                },
                "title": "Vert.x - From zero to (micro-) hero",
                "track": {
                    "id": "java",
                    "label": "java.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l3",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "QXD-8875",
                "lang": "en",
                "mainSpeaker": "Lars Gregori",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "The Internet of Things (IoT) with all its sensors produces already lots of data. These Big Data have to be collected, analyzed and represented. But instead of presenting them as the already known line and bar charts, I'll show them on a Raspberry Pi in Minecraft.\r\nIn my presentation I'll demonstrate how the simple Minecraft API can be used to visualize data in different ways and how to interact with them.",
                "talkType": {
                    "id": "tia",
                    "label": "tia.label"
                },
                "title": "Visualization IoT Data With Minecraft",
                "track": {
                    "id": "future",
                    "label": "future.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "CZA-7532",
                "lang": "en",
                "mainSpeaker": "Koen Aben",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Ted Vinke",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "So you\u2019ve heard Grails is a popular web-application framework for the JVM? Did you know you can create awesome web applications very rapidly because of its dynamic features, convention-over-configuration and sensible defaults? In this session the speakers will show you the power of Grails, by leading you through a sample Star Trek application. \r\n\r\nWe\u2019ll be covering:\r\n\r\n- All kinds of fun tasks througout the codebase, to get to know all kinds of features\r\n- Focus will be on newest features in Grails 3, including Gradle and Spring Boot\r\n- Interaction with Docker containers to support intergration testing\r\n\r\nIn the end you have experienced the Fun and Joy in developing with Groovy and Grails 3. and will have enough practical hands-on knowledge to get started with projects of their own.",
                "talkType": {
                    "id": "lab",
                    "label": "lab.label"
                },
                "title": "Web Application Development using Grails & Docker",
                "track": {
                    "id": "lang",
                    "label": "lang.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "VDK-8008",
                "lang": "en",
                "mainSpeaker": "Lieven Desmet",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "In this presentation, I will provide the Devoxx audience the necessary insights in this emerging Web technology, and discuss the various security aspects of WebRTC. This content is based on a recent study of the Web Security specifications our research lab has been conducting together with researchers at SAP, W3C and Trinity College Dublin in the context of the European FP7 research project STREWS. \r\n\r\nFirstly, the overall WebRTC architecture will be presented, and the enabling technologies (such as STUN, TURN, ICE and DTLS-SRTP) will be introduced. This architecture will be illustrated in multiple deployment scenarios. As part of this description, the basic security characteristics of WebRTC will be identified. \r\n\r\nSecondly, I will discuss how the new WebRTC technology impacts the security model of the current Web. They will highlight some of the weaknesses we have spotted during their security assessment, as well as discuss the open security challenges with the WebRTC technology. ",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "WebRTC Security: is web-based peer-to-peer ready for primetime?",
                "track": {
                    "id": "web",
                    "label": "web.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "SCS-4448",
                "lang": "en",
                "mainSpeaker": "Niek Palm",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Is this short talk I will Ignite you with some cool pictures of my journey around the world and correlate them in an ironic way to DevOps",
                "talkType": {
                    "id": "ignite",
                    "label": "ignite.label"
                },
                "title": "What I learned around the world about DevOps",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "WUS-3593",
                "lang": "en",
                "mainSpeaker": "Patrick Curran",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Discussion of the evolution of the JCP program and motivations for participation in the JCP program, both now and in the future. Learn about the progress being made in the JCP.Next effort, and the proposals for enabling greater community access and collaboration. Attend the session to learn more about the perspectives of the stakeholders in the community creating the future of Java through the JCP.",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "What is next for the JCP?",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "RIN-0572",
                "lang": "en",
                "mainSpeaker": "Oliver Gierke",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "This talk will give a broad overview of the new features introduced in the latest Spring Data release trains. We will cover recent additions and improvements in Spring Data Commons - the module that's shared amongst the store specific ones. This especially covers the enhanced support for Java 8 (Optionals, Streams). We'll then delve into the latest and greatest features of individual store modules, like JPA (especially JPA 2.1 features), MongoDB, Neo4j, Solr and the community ones as well.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "What's new in Spring Data?",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "RWJ-6098",
                "lang": "en",
                "mainSpeaker": "Vijay Kiran",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Clojure is a functional, dynamic programming language that targets on JVM, CLR and JavaScript (using ClojureScript) - A language Optimized for Developer Happiness and Productivity\r\n\r\nIn this talk we'll explore the foundations of the language and several features that make working with Clojure a joy such as STM, functional programming, concurrency support (primitives, channels) and transducers and their real-world applications.\r\n",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Why Clojure?",
                "track": {
                    "id": "lang",
                    "label": "lang.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "VCY-7181",
                "lang": "en",
                "mainSpeaker": "Mani Sarkar",
                "otherSpeakers": [
                    "Patrick Reinhart",
                    "Ludovic HOCHET"
                ],
                "privateMessage": "",
                "secondarySpeaker": "Oti Humbel",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "What could be a motivation for a developer to contribute to the OpenJDK even when Oracle JDK is used within the production? \r\n\r\nLet's share experiences about this topic and what resources there are to get into it.",
                "talkType": {
                    "id": "bof",
                    "label": "bof.label"
                },
                "title": "Why should I contribute to OpenJDK?",
                "track": {
                    "id": "java",
                    "label": "java.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "GZH-9392",
                "lang": "en",
                "mainSpeaker": "Dimitris Andreadis",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Come to our yearly rendezvous with the Developer Community to discuss (over beer!) the present and future of the WildFly Application Server Project (formerly known as the JBoss Application Server) with members of the WildFly Core Development Team.",
                "talkType": {
                    "id": "bof",
                    "label": "bof.label"
                },
                "title": "WildFly Community BOF and V10 update",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "TII-0371",
                "lang": "en",
                "mainSpeaker": "Mark Nijenhuis",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Bol.com is the largest online retailer in the Netherlands and Belgium and is still growing at a staggering rate.\r\nFor gathering business intelligence (BI) insights we have a team of twelve BI engineers. The growth of data, users and complexity have forced our team of to rethink our traditional Oracle based data warehouse structure. Currently we are moving towards a more hybrid BI solution based on Microservices at a BIG data scale, using Hadoop, HBASE, Oracle, etc.\r\n\r\nIn this presentation Debarshi and Mark will discuss the unique challenges we have faced and are still facing with petabytes of data along with design decisions, tooling landscape and architectural choices. We have created and explored various toolings and concepts for solving our problems. We discuss concepts pertaining to Data quality at big data scale, large scale batch scheduling, job monitoring, ETL processing, reporting, continuous deployment and team autonomy for BI at scale. Essentially, all the hacks to get our systems towards awesomeness.\r\n\r\nThe presentation will guide audience through transformation of legacy (vintage) BI towards more scalable BI setup as well as mental and techincal block that came along the way",
                "talkType": {
                    "id": "quick",
                    "label": "quick.label"
                },
                "title": "With BIG data comes BIG responsibility; The curious case of BOL.COM",
                "track": {
                    "id": "cloud",
                    "label": "cloud.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "QQZ-8557",
                "lang": "en",
                "mainSpeaker": "Jonas Bon\u00e9r",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "It doesn\u2019t matter how beautiful, loosely coupled, scalable, highly concurrent, non-blocking, responsive and performant your application is\u2013\u2013if it isn't running, then it's 100% useless. Without resilience, nothing else matters. \r\n\r\nMost developers understand what the word resilience means, at least superficially, but way too many lack a deeper understanding of what it really means in the context of the system that they are working on now. I find it really sad to see, since understanding and managing failure is more important today than ever. Outages are incredibly costly\u2014for many definitions of cost\u2014and can sometimes take down whole businesses. \r\n\r\nIn this talk we will explore the essence of resilience. What does it really mean? What are its mechanics and characterizing traits? How do other sciences and industries manage it, and what can we learn from that? We will see that everything hints at the same conclusion; that failure is inevitable and needs to be embraced, and that resilience is by design.\r\n",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Without Resilience, Nothing Else Matters",
                "track": {
                    "id": "lang",
                    "label": "lang.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d4",
                "event": "Devoxx Belgium 2015",
                "id": "PWY-3029",
                "lang": "en",
                "mainSpeaker": "Dan Allen",
                "otherSpeakers": [
                    "Alex Soto",
                    "Antoine Sabot-Durand",
                    "C\u00e9dric Champeau",
                    "Robert Panzer",
                    "Sebastian Daschner"
                ],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "People often say that documentation is boring. Not us! Let's talk about documentation. How do you write it? How do you publish it? What tools do you use? How do you encourage other people to write? Let's share ways to get other people to love and appreciate documentation just like we do.",
                "talkType": {
                    "id": "bof",
                    "label": "bof.label"
                },
                "title": "Writers Write! The Documentation BOF",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                }
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d3",
                "event": "Devoxx Belgium 2015",
                "id": "VOL-5915",
                "lang": "en",
                "mainSpeaker": "Baruch Sadogursky",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Of you know Groovy, you surely know how to use Groovy AST transformations. You might although think that writing your own AST transformations is something complicated, and takes deep knowledge of academical compliers, abstract syntax tree and other neat stuff. Well, no! In this session you'll see that writing an AST transformation is easy, intuitive and you can do it too, today!",
                "talkType": {
                    "id": "tia",
                    "label": "tia.label"
                },
                "title": "Writing Groovy AST Transformations: Getting Practical in an hour!",
                "track": {
                    "id": "lang",
                    "label": "lang.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "IYY-6306",
                "lang": "en",
                "mainSpeaker": "Richard Warburton",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Maybe you were doing microservices before they were cool, and you\u2019re bored of hearing the same topics rehashed in every microservices talk? If so this talk is for you. Yocto services are a brand new architectural concept that take micro services concepts to the extreme.\r\n\r\nWhilst micro services suffer from an unclear definition, increased complexity and debates over the appropriate use cases, Yocto Services are only 1 line of code long. This also instantly ends any discussions about code style readability. We\u2019ll also cover adoption difficulties, showing how you can apply a reverse conway maneuver to enable the adoption of Yocto Services.\r\n\r\nYocto Services: because you can never have too much of a good thing!",
                "talkType": {
                    "id": "ignite",
                    "label": "ignite.label"
                },
                "title": "Yocto Services: The new, new, new reality!",
                "track": {
                    "id": "archisec",
                    "label": "archisec.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d1",
                "event": "Devoxx Belgium 2015",
                "id": "IJT-0023",
                "lang": "en",
                "mainSpeaker": "Peter Minne",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Like many other products Showpad started as a proof-of-concept. Carefully launched, gradually exposed to the market, and then the ship started sailing. Staying afloat was a plus, but moving forward at cruising speed is what we really wanted. The path of growing our company to over 100 employees and 900 customers, raising $10m in funding along the way, has been quite a ride so far with huge challenges, but also with priceless rewards.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "You've built a prototype... and then it takes off",
                "track": {
                    "id": "startup",
                    "label": "startup.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "BFB-7666",
                "lang": "en",
                "mainSpeaker": "Stuart Marks",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "The Collections Framework has been around for a long time. The existing implementations have mostly served us well, but there's still room for improvement. Current work slated for Java 9 includes new collection implementations that add convenience, immutability, and space efficiency. The \"API footprint\" of the new collections will be extremely small, making them simple to learn and use. The new collections implement the standard collections interfaces, so they will be readily interoperable with code that uses the collections framework. The benefits will be simpler, cleaner code, and reduced memory consumption for many common cases.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "Young Pups: New Collections APIs for Java 9",
                "track": {
                    "id": "java",
                    "label": "java.label"
                }
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "BOX-7491",
                "lang": "en",
                "mainSpeaker": "Roland Hu\u00df",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Fabric8 is an integration and management platform adding to the Java developer's perspective of Kubernetes and OpenShift. It consists of multiple parts.\r\n\r\nFabric8 tooling helps tremendously in deploying Java applications on Kubernetes and OpenShift by creating all the complex deployment descriptors directly from a Java build.\r\n\r\nIn addition, fabric8 contains a rich set of DevOps Microservices which provides a flexible and automatedsetup for a Continous Integration and Delivery pipeline on a per project basis. \r\n\r\nIt also includes an integration-Platform-as-a-Service (iPaaS) centered around Camel and ActiveMQ with rich visualisations and one click installations.\r\n\r\nBut the queen of fabric8 is its web console which allows for a rich user experience for managing Kubernetes services, pods and more. With this in place even complex setups can be easily managed.\r\n\r\nThis talk provides an overview over all these components and shows how the pieces fit together.",
                "talkType": {
                    "id": "tia",
                    "label": "tia.label"
                },
                "title": "fabric8 - Java developer tools for Kubernetes and OpenShift",
                "track": {
                    "id": "methodevops",
                    "label": "methodevops.label"
                }
            },
            {
                "audienceLevel": "l2",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "MJO-5535",
                "lang": "en",
                "mainSpeaker": "Fabian St\u00e4ber",
                "otherSpeakers": [],
                "privateMessage": "",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "HTTP/2, the new version of the HTTP protocol, provides a lot of new features for server-to-server communication:\r\n\r\n  * bidirectional communication using push requests\r\n  * multiplexing within a single TCP connection\r\n  * long running connections\r\n  * stateful connections\r\n\r\nHTTP/2 does not define a JavaScript API, so JavaScript clients running in a Web browser can make only limited use of the new capabilities. However, for server-to-server communication, HTTP/2 provides a lot of ways to go beyond existing REST APIs.\r\n\r\nThis talk shows HTTP/2's potential for new server-to-server APIs.",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "unRESTful Web Services with HTTP/2",
                "track": {
                    "id": "ssj",
                    "label": "ssj.label"
                },
                "userGroup": true
            },
            {
                "audienceLevel": "l1",
                "demoLevel": "d2",
                "event": "Devoxx Belgium 2015",
                "id": "INA-5890",
                "lang": "en",
                "mainSpeaker": "Clement Escoffier",
                "otherSpeakers": [],
                "privateMessage": "",
                "secondarySpeaker": "Paulo Lopes",
                "sponsorTalk": false,
                "state": {
                    "code": "accepted"
                },
                "summary": "Vert.x 3 is a toolkit to create reactive applications on the Java Virtual Machine. Vert.x 3 takes the JVM to new levels of reactive awesomeness: it lets you build scalable applications transparently distributed in Java, JavaScript, Ruby and Groovy. And, you don\u2019t have to choose a single language, but mix them!\r\n\r\nThis talk presents the key concepts of Vert.x and how you can use it to build your next application. This session explains how the simple model promoted by Vert.x enables the construction of concurrent, scalable and efficient micro-service based applications.\r\n\r\nSeveral examples are developed during the talk and demonstrates Vert.x features such as the distributed event bus, the high availability, the polyglot aspect and vert.x web. ",
                "talkType": {
                    "id": "conf",
                    "label": "conf.label"
                },
                "title": "vert.x 3 - be reactive on the JVM but not only in Java",
                "track": {
                    "id": "lang",
                    "label": "lang.label"
                },
                "userGroup": true
            }
        ],
        "approved": []
    }
}
